#!/bin/bash
set -e

# Build emacs with an increased heap size:
# in src/sheap.h set
# enum { STATIC_HEAP_SIZE = sizeof (Lisp_Object) << 24 };

# Assume emacs has been compiled and installed in /usr/local
# Note: compilation of emacs from sources is necessary to get access to temacs
EMACS=/usr/local/bin/emacs

# Get the current emacs version
EMACS_VERSION=$($EMACS --version |  grep "GNU Emacs [0-9][0-9.]*" | sed s/"GNU Emacs \([1-9][0-9]\.[0-9]\)[0-9\.]*/\1/")

# Infer the location of the temacs executable and documentation
TEMACS=/usr/local/src/emacs-$EMACS_VERSION/src/temacs
EMACSDOC=/usr/local/share/emacs/$EMACS_VERSION/etc/

# Set the architecture
if which setarch >& /dev/null
then
    case `uname -m` in
        i686)
            DEMACS="setarch i386 -R $TEMACS"
            ;;
        x86_64)
            DEMACS="setarch x86_64 -R $TEMACS"
            ;;
    esac
fi

# Echo commands in red
echoRed ()
{
    echo -e "\e[31m$1\e[0m"
}

echoRed "Creating init-eemacs.el and load-eemacs.el"
echo ";; Automatically generated by makeEemacs" > init-eemacs.el
echo ";; Automatically generated by makeEemacs" > load-eemacs.el
sed -f bin/sedLoadPath init.el >> init-eemacs.el
find init -name "*.el" -exec sed -f bin/sedLoadPath {} \; >> init-eemacs.el
find my-lisp -name "*.el" -exec sed -f bin/sedLoadPath {} \; >> init-eemacs.el
grep "init-eemacs" ~/.emacs.d/init/qinit.el >> init-eemacs.el
grep "init-eemacs" ~/.emacs.d/init.el >> init-eemacs.el
grep -v "init-eemacs" ~/.emacs.d/init.el >> load-eemacs.el
rm -f init-eemacs.elc

echoRed "Updating and compiling elpa packages"
$EMACS --batch \
       -L init \
       -l init-package.el \
       -l init-eemacs.el \
       --eval "(progn (package-refresh-contents) (package-utils-upgrade-all) (byte-recompile-directory (expand-file-name \"~/Emacs/elpa\") 0))"

echoRed "Compiling local packages and init files"
make

# Ensure the documentation for built-in functions and variables is available to temacs
echoRed "Link documentation directory"
rm -f ../etc
ln -s $EMACSDOC ../etc

echoRed "Dump eemacs"
$DEMACS \
    -q --batch \
    --eval "(setq delete-old-versions t)" \
    -L ~/.emacs.d/init \
    --load load-eemacs.el \
    --eval "(setq command-line-processed nil)" \
    --eval "(dump-emacs \"~/bin/linux/eemacs.new\" \"$TEMACS\")"

# Remove the temporary link to the documentation
rm ../etc

# If the build was successful update eemacs
if [ -f ~/bin/linux/eemacs.new ]
then
    mv ~/bin/linux/eemacs ~/bin/linux/eemacs.old
    mv ~/bin/linux/eemacs.new ~/bin/linux/eemacs

    # and build the tags files
    bin/makeTAGS
fi

echoRed "Finished building eemacs"
