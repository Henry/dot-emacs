;;; init-dired+.el --- Initialize better directory display
;; -----------------------------------------------------------------------------
;;;  Load packages
(use-package dired+)
(use-package dired-details+)
(use-package dired-sort-menu+)

;;;   dired-tar: tar and untar (gz) from dired (bound to 'T')
(require 'dired-tar)

;;;   fsdired: sort files to go to different places in dired
(require 'fsdired)

;; -----------------------------------------------------------------------------
;;;  Set the ls options

;; Set the ls options to put directories first
;; ideally by adding --group-directories-first
;; but long options are not currently supported so ...
(setq dired-listing-switches "-al")

;; ... and hack the dired-insert-directory function to add the
;; --group-directories-first option:
(defadvice dired-insert-directory
  (before my-dired-insert-directory
          (dir switches &optional file-list wildcard hdr))
  (setq switches (concat switches " --group-directories-first")))
(ad-activate 'dired-insert-directory)

;; Set the face for executable files
(defface diredp-executable-file-name
  '((t (:foreground "Red" :weight bold)))
  "*Face used for names of executable files in dired buffers."
  :group 'Dired-Plus :group 'font-lock-highlighting-faces)
(defvar diredp-executable-file-name 'diredp-executable-file-name)

(setq diredp-font-lock-keywords-1
      (append
       diredp-font-lock-keywords-1
       (list
        (list dired-re-exe
              `(".+"
                (dired-move-to-filename)
                nil
                (0 diredp-executable-file-name t))))))

;; -----------------------------------------------------------------------------
;;;  Better cursor movement functions

(defun dired-next-file-line ()
  "Move to the next dired line that have a file or directory name on it."
  (interactive)
  (call-interactively 'dired-next-line)
  (if (eobp)
      (dired-previous-line 1)))

(defun dired-previous-file-line ()
  "Move to the previous dired line that have a file or directory name on it."
  (interactive)
  (call-interactively 'dired-previous-line)
  (if (not (dired-move-to-filename))
      (dired-next-line 1)))

;; -----------------------------------------------------------------------------
;;;  Keybindings

(substitute-key-definition
 'dired-next-line 'dired-next-file-line dired-mode-map)
(substitute-key-definition
 'dired-previous-line 'dired-previous-file-line dired-mode-map)

;; wdired: make the file names writable
(define-key dired-mode-map "\C-w" 'wdired-change-to-wdired-mode)

(define-key dired-mode-map (kbd "[" ) 'backward-page)
(define-key dired-mode-map (kbd "]" ) 'forward-page)
(define-key dired-mode-map (kbd "<M-up>" ) 'dired-up-directory)
(define-key dired-mode-map (kbd "/") 'dired-omit-expunge)

(setq dired-omit-files "^\\.?#\\|^\\.")

;; Set buffer-local variables
(defun my-dired-mode-hook ()
  ;; hl-line - highlight current-line
  (hl-line-mode)

  ;; Use the same buffer for visited directories
  (toggle-diredp-find-file-reuse-dir 1)

  ;; Set omit-mode by default
  (dired-omit-mode 1)

  ;; Ensure that the byte-compiled version picks-up the dired+ fonts
  (set (make-local-variable 'font-lock-defaults)
       (cons '(dired-font-lock-keywords diredp-font-lock-keywords-1)
             (cdr font-lock-defaults)))

  ;; Switch-on font-lock
  (font-lock-mode 1)
  )

(add-hook 'dired-mode-hook 'my-dired-mode-hook)

;; -----------------------------------------------------------------------------
;;;  Image-dired

(use-package image-dired
  :init
  ;; Set the directory for the thumbnail images generated by image-dired
  (setq image-dired-dir (expand-file-name "~/Emacs/Thumbnails")))

;; -----------------------------------------------------------------------------
;;; init-dired+.el ends here
