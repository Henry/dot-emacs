Short Contents
**************

LaTeX2e
1 Overview of LaTeX
2 Starting & ending
3 Document classes
4 Typefaces
5 Layout
6 Sectioning
7 Cross references
8 Environments
9 Footnotes
10 Definitions
11 Counters
12 Lengths
13 Line breaking
14 Page breaking
15 Making paragraphs
16 Math formulas
17 Modes
18 Page Styles
19 Spaces
20 Boxes
21 Special insertions
22 Splitting the input
23 Front/back matter
24 Letters
25 Terminal Input/Output
26 Command Line
Appendix A Document templates
Concept Index
Command Index


Table of Contents
*****************

LaTeX2e
1 Overview of LaTeX
2 Starting & ending
3 Document classes
  3.1 Document class options
4 Typefaces
  4.1 Font styles
  4.2 Font sizes
  4.3 Low-level font commands
5 Layout
  5.1 `\onecolumn'
  5.2 `\twocolumn'
  5.3 `\flushbottom'
  5.4 `\raggedbottom'
  5.5 Page layout parameters
6 Sectioning
7 Cross references
  7.1 `\label'
  7.2 `\pageref{KEY}'
  7.3 `\ref{KEY}'
8 Environments
  8.1 `abstract'
  8.2 `array'
  8.3 `center'
    8.3.1 `\centering'
  8.4 `description'
  8.5 `displaymath'
  8.6 `document'
  8.7 `enumerate'
  8.8 `eqnarray'
  8.9 `equation'
  8.10 `figure'
  8.11 `flushleft'
    8.11.1 `\raggedright'
  8.12 `flushright'
    8.12.1 `\raggedleft'
  8.13 `itemize'
  8.14 `letter' environment: writing letters
  8.15 `list'
  8.16 `math'
  8.17 `minipage'
  8.18 `picture'
    8.18.1 `\circle'
    8.18.2 `\makebox'
    8.18.3 `\framebox'
    8.18.4 `\dashbox'
    8.18.5 `\frame'
    8.18.6 `\line'
    8.18.7 `\linethickness'
    8.18.8 `\thicklines'
    8.18.9 `\thinlines'
    8.18.10 `\multiput'
    8.18.11 `\oval'
    8.18.12 `\put'
    8.18.13 `\shortstack'
    8.18.14 `\vector'
  8.19 `quotation'
  8.20 `quote'
  8.21 `tabbing'
  8.22 `table'
  8.23 `tabular'
    8.23.1 `\multicolumn'
    8.23.2 `\cline'
    8.23.3 `\hline'
    8.23.4 `\vline'
  8.24 `thebibliography'
    8.24.1 `\bibitem'
    8.24.2 `\cite'
    8.24.3 `\nocite'
    8.24.4 Using BibTeX
  8.25 `theorem'
  8.26 `titlepage'
  8.27 `verbatim'
    8.27.1 `\verb'
  8.28 `verse'
9 Footnotes
  9.1 `\footnote'
  9.2 `\footnotemark'
  9.3 `\footnotetext'
  9.4 Footnote parameters
10 Definitions
  10.1 `\newcommand' & `\renewcommand'
  10.2 `\newcounter'
  10.3 `\newlength'
  10.4 `\newsavebox'
  10.5 `\newenvironment' & `\renewenvironment'
  10.6 `\newtheorem'
  10.7 `\newfont'
  10.8 `\protect'
11 Counters
  11.1 `\alph \Alph \arabic \roman \Roman \fnsymbol': Printing counters
  11.2 `\usecounter{COUNTER}'
  11.3 `\value{COUNTER}'
  11.4 `\setcounter{COUNTER}{VALUE}'
  11.5 `\addtocounter{COUNTER}{VALUE}'
  11.6 `\refstepcounter{COUNTER}'
  11.7 `\stepcounter{COUNTER}'
  11.8 `\day \month \year': Predefined counters
12 Lengths
  12.1 `\setlength{\LEN}{VALUE}'
  12.2 \addtolength{\LEN}{AMOUNT}
  12.3 `\settodepth'
  12.4 `\settoheight'
  12.5 `\settowidth{\LEN}{TEXT}'
  12.6 Predefined lengths
13 Line breaking
  13.1 `\\'[*][MORESPACE]
  13.2 `\obeycr' & `\restorecr'
  13.3 `\newline'
  13.4 `\-' (discretionary hyphen)
  13.5 `\fussy'
  13.6 `\sloppy'
  13.7 `\hyphenation'
  13.8 `\linebreak' & `\nolinebreak'
14 Page breaking
  14.1 `\cleardoublepage'
  14.2 `\clearpage'
  14.3 `\newpage'
  14.4 `\enlargethispage'
  14.5 `\pagebreak' & `\nopagebreak'
15 Making paragraphs
  15.1 `\indent'
  15.2 `\noindent'
  15.3 `\parskip'
  15.4 Marginal notes
16 Math formulas
  16.1 Subscripts & Superscripts
  16.2 Math symbols
  16.3 Math functions
  16.4 Math accents
  16.5 Spacing in math mode
  16.6 Math Miscellany
17 Modes
18 Page Styles
  18.1 `\maketitle'
  18.2 `\pagenumbering'
  18.3 `\pagestyle'
  18.4 `\thispagestyle{STYLE}'
19 Spaces
  19.1 `\hspace'
  19.2 `\hfill'
  19.3 `\SPACE'
  19.4 `\@'
  19.5 `\thinspace'
  19.6 `\/'
  19.7 `\hrulefill'
  19.8 `\dotfill'
  19.9 `\addvspace'
  19.10 `\bigskip \medskip \smallskip'
  19.11 `\vfill'
  19.12 `\vspace[*]{LENGTH}'
20 Boxes
  20.1 `\mbox{TEXT}'
  20.2 `\fbox' and `\framebox'
  20.3 `lrbox'
  20.4 `\makebox'
  20.5 `\parbox'
  20.6 `\raisebox'
  20.7 `\savebox'
  20.8 `\sbox{\BOXCMD}{TEXT}'
  20.9 `\usebox{\BOXCMD'
21 Special insertions
  21.1 Reserved characters
  21.2 Text symbols
  21.3 Accents
  21.4 Non-English characters
  21.5 `\rule'
  21.6 `\today'
22 Splitting the input
  22.1 `\include'
  22.2 \`includeonly'
  22.3 \input
23 Front/back matter
  23.1 Tables of contents
    23.1.1 \addcontentsline
    23.1.2 \addtocontents
  23.2 Glossaries
  23.3 Indexes
24 Letters
  24.1 \address{RETURN-ADDRESS}
  24.2 `\cc'
  24.3 `\closing'
  24.4 `\encl'
  24.5 `\location'
  24.6 `\makelabels'
  24.7 `\name'
  24.8 `\opening{TEXT}'
  24.9 `\ps'
  24.10 `\signature{TEXT}'
  24.11 `\startbreaks'
  24.12 `\stopbreaks'
  24.13 `\telephone'
25 Terminal Input/Output
  25.1 `\typein[CMD]{MSG}'
  25.2 `\typeout{MSG}'
26 Command Line
Appendix A Document templates
  A.1 `book' template
  A.2 `beamer' template
  A.3 `tugboat' template
Concept Index
Command Index


LaTeX2e
*******

This document is version 2.0 (June 2008) of an unofficial reference
manual for LaTeX, a document preparation system.  It is intended to
cover LaTeX2e, which has been the standard version of LaTeX for many
years.

   LaTeX is implemented as a macro package for Donald E. Knuth's TeX
typesetting program.  LaTeX was originally created by Leslie Lamport;
it is now maintained by a group of volunteers
(`http://latex-project.org').  The official documentation written by
the LaTeX project is available there.  Again, the present document is
unofficial and has not been reviewed by the LaTeX maintainers.

1 Overview of LaTeX
*******************

The LaTeX command typesets a file of text using the TeX program and the
LaTeX "macro package" for TeX.  To be more specific, it processes an
input file containing the text of a document with interspersed commands
that describe how the text should be formatted.  It produces at least
three files as output:

  1. A main output file, which is one of:

       1. If invoked as `latex', a "Device Independent" (`.dvi') file.
          This contains commands that can be translated into commands
          for a variety of output devices.  You can view such `.dvi'
          output of LaTeX by using a program such as `xdvi' (display
          directly) or `dvips' (convert to PostScript).

       2. If invoked as `pdflatex', a "Portable Document Format"
          (`.pdf') file.  Typically, this is a self-contained file, with
          all fonts and images embedded.  This can be very useful, but
          it does make the output much larger than the `.dvi' produced
          from the same document.

     There are other less-common variants of LaTeX (and TeX) as well,
     which can produce HTML, XML, and other things.

  2. A "transcript" or `.log' file that contains summary information and
     diagnostic messages for any errors discovered in the input file.

  3. An "auxiliary" or `.aux' file. This is used by LaTeX itself, for
     things such as sectioning.

   A LaTeX command begins with the command name, which consists of a
`\' followed by either (a) a string of letters or (b) a single
non-letter.  Arguments contained in square brackets, `[]', are optional
while arguments contained in braces, `{}', are required.

   LaTeX is case sensitive.  Enter all commands in lower case unless
explicitly directed to do otherwise.

2 Starting & ending
*******************

A minimal input file looks like the following:

     \documentclass{CLASS}
     \begin{document}
     YOUR TEXT
     \end{document}

where the CLASS is a valid document class for LaTeX.  *Note Document
classes::, for details of the various document classes available
locally.

   You may include other LaTeX commands between the `\documentclass'
and the `\begin{document}' commands (this area is called the
"preamble").

3 Document classes
******************

The class of a given document is defined with the command:

     \documentclass[OPTIONS]{CLASS}

The `\documentclass' command must be the first command in a LaTeX
source file.

   Built-in LaTeX document CLASS names are (many other document classes
are available as add-ons; *note Overview::):

     article  report  book  letter  slides

   Standard OPTIONS are described below.

3.1 Document class options
==========================

You can specify so-called "global options" or "class options" to the
`\documentclass' command by enclosing them in square brackets as usual.
To specify more than one OPTION, separate them with a comma:

     \documentclass[OPTION1,OPTION2,...]{CLASS}

   Here is the list of the standard class options.

   All of the standard classes except `slides' accept the following
options for selecting the typeface size (default is `10pt'):

     10pt  11pt  12pt

   All of the standard classes accept these options for selecting the
paper size (default is `letterpaper'):

     a4paper a5paper b5paper executivepaper legalpaper letterpaper

   Miscellaneous other options:

`draft, final'
     mark/do not mark overfull boxes with a big black box; default is
     `final'.

`fleqn'
     Put displayed formulas flush left; default is centered.

`landscape'
     Selects landscape format; default is portrait.

`leqno'
     Put equation numbers on the left side of equations; default is the
     right side.

`openbib'
     Use "open" bibliography format.

`titlepage, notitlepage'
     Specifies whether the title page is separate; default depends on
     the class.

   These options are not available with the slides class:

`onecolumn'
`twocolumn'
     Typeset in one or two columns; default is `onecolumn'.

`oneside'
`twoside'
     Selects one- or two-sided layout; default is `oneside', except for
     the `book' class.

     The `\evensidemargin' (`\oddsidemargin' parameter determines the
     distance on even (odd) numbered pages between the left side of the
     page and the text's left margin.  The defaults vary with the paper
     size and whether one- or two-side layout is selected.  For
     one-sided printing the text is centered, for two-sided,
     `\oddsidemargin' is 40% of the difference between `\paperwidth'
     and `\textwidth' with `\evensidemargin' the remainder.

`openright'
`openany'
     Determines if a chapter should start on a right-hand page; default
     is `openright' for book.

   The `slides' class offers the option `clock' for printing the time
at the bottom of each note.

   Additional packages are loaded like this:

     \usepackage[OPTIONS]{PKG}

   To specify more than one PKG, you can separate them with a comma, or
use multiple `\usepackage' commands.

   Any options given in the `\documentclass' command that are unknown
by the selected document class are passed on to the packages loaded with
`\usepackage'.

4 Typefaces
***********

Two important aspects of selecting a "font" are specifying a size and a
style.  The LaTeX commands for doing this are described here.

4.1 Font styles
===============

The following type style commands are supported by LaTeX.

   These commands are used like `\textit{italic text}'. The
corresponding command in parenthesis is the "declaration form", which
takes no arguments. The scope of the declaration form lasts until the
next type style command or the end of the current group.

   The declaration forms are cumulative; i.e., you can say either
`\sffamily\bfseries' or `\bfseries\sffamily' to get bold sans serif.

   You can also use the environment form of the declaration forms; for
instance, `\begin{ttfamily}...\end{ttfamily}'.

`\textrm (\rmfamily)'
     Roman.

`\textit (\itshape)'
     Italics.

`\emph'
     Emphasis (switches between `\textit' and `\textrm').

`\textmd (\mdseries)'
     Medium weight (default).

`\textbf (\bfseries)'
     Boldface.

`\textup (\upshape)'
     Upright (default). The opposite of slanted.

`\textsl (\slshape)'
     Slanted.

`\textsf (\sffamily)'
     Sans serif.

`\textsc (\scshape)'
     Small caps.

`\texttt (\ttfamily)'
     Typewriter.

`\textnormal (\normalfont)'
     Main document font.

`\mathrm'
     Roman, for use in math mode.

`\mathbf'
     Boldface, for use in math mode.

`\mathsf'
     Sans serif, for use in math mode.

`\mathtt'
     Typewriter, for use in math mode.

`\mathit'
`(\mit)'
     Italics, for use in math mode.

`\mathnormal'
     For use in math mode, e.g. inside another type style declaration.

`\mathcal'
     `Calligraphic' letters, for use in math mode.

   In addition, the command `\mathversion{bold}' can be used for
switching to bold letters and symbols in formulas.
`\mathversion{normal}' restores the default.

   LaTeX also provides these commands, which unconditionally switch to
the given style, that is, are _not_ cumulative.  They are used
differently than the above commands, too: `{\CMD ...}' instead of
`\CMD{...}'.  These are two very different things.

`\bf'
     Switch to bold face.

`\cal'
     Switch to calligraphic letters for math.

`\em'
     Emphasis (italics within roman, roman within italics).

`\it'
     Italics.

`\rm'
     Roman.

`\sc'
     Small caps.

`\sf'
     Sans serif.

`\sl'
     Slanted (oblique).

`\tt'
     Typewriter (monospace, fixed-width).


4.2 Font sizes
==============

The following standard type size commands are supported by LaTeX.  The
table shows the command name and the corresponding actual font size
used (in points) with the `10pt', `11pt', and `12pt' document size
options, respectively (*note Document class options::).

Command                   `10pt'  `11pt'  `12pt'
-------------------------------------------------- 
`\tiny'                   5       6       6
`\scriptsize'             7       8       8
`\footnotesize'           8       9       10
`\small'                  9       10      10.95
`\normalsize' (default)   10      10.95   12
`\large'                  12      12      14.4
`\Large'                  14.4    14.4    17.28
`\LARGE'                  17.28   17.28   20.74
`\huge'                   20.74   20.74   24.88
`\Huge'                   24.88   24.88   24.88

   The commands as listed here are "declaration forms". The scope of
the declaration form lasts until the next type style command or the end
of the current group.  You can also use the environment form of these
commands; for instance, `\begin{tiny}...\end{tiny}'.

4.3 Low-level font commands
===========================

These commands are primarily intended for writers of macros and
packages.  The commands listed here are only a subset of the available
ones.

`\fontencoding{enc}'
     Select font encoding. Valid encodings include `OT1' and `T1'.

`\fontfamily{family}'
     Select font family. Valid families include:

        * `cmr'  for Computer Modern Roman

        * `cmss' for Computer Modern Sans Serif

        * `cmtt' for Computer Modern Typewriter

     and numerous others.

`\fontseries{series}'
     Select font series. Valid series include:

        * `m'  Medium (normal)

        * `b'  Bold

        * `c'  Condensed

        * `bc' Bold condensed

        * `bx' Bold extended

     and various other combinations.

`\fontshape{shape}'
     Select font shape. Valid shapes are:

        * `n'  Upright (normal)

        * `it' Italic

        * `sl' Slanted (oblique)

        * `sc' Small caps

        * `ui' Upright italics

        * `ol' Outline

     The two last shapes are not available for most font families.

`\fontsize{size}{skip}'
     Set font size. The first parameter is the font size to switch to
     and the second is the line spacing to use; this is stored in a
     parameter named `\baselineskip'.  The unit of both parameters
     defaults to pt.  The default `\baselineskip' for the Computer
     Modern typeface is 1.2 times the `\fontsize'.

     The line spacing is also multiplied by the value of the
     `\baselinestretch' parameter when the type size changes; the
     default is 1.  However, the best way to "double space" a document,
     if you should be unlucky enough to have to produce such, is to use
     the `setspace' package; see
     `http://www.tex.ac.uk/cgi-bin/texfaq2html?label=linespace'.

`\selectfont'
     The changes made by calling the four font commands described above
     do not come into effect until `\selectfont' is called.

`\usefont{enc}{family}{series}{shape}'
     The same as invoking `\fontencoding', `\fontfamily', `\fontseries'
     and `\fontshape' with the given parameters, followed by
     `\selectfont'.

5 Layout
********

Miscellaneous commands for controlling the general layout of the page.

5.1 `\onecolumn'
================

The `\onecolumn' declaration starts a new page and produces
single-column output.  This is the default.

5.2 `\twocolumn'
================

Synopsis:

     \twocolumn[TEXT1COL]

   The `\twocolumn' declaration starts a new page and produces
two-column output. If the optional TEXT1COL argument is present, it is
typeset in one-column mode before the two-column typesetting starts.

   These parameters control typesetting in two-column output:

`\columnsep'
     The distance between columns (35pt by default).

`\columnseprule'
     The width of the rule between columns; the default is 0pt, so
     there is no rule.

`\columnwidth'
     The width of the current column; this is equal to `\textwidth' in
     single-column text.


   These parameters control float behavior in two-column output:

`\dbltopfraction'
     Maximum fraction at the top of a two-column page that may be
     occupied by floats.  Default `.7', can be usefully redefined to
     (say) `.9' to avoid going to float pages so soon.

`\dblfloatpagefraction'
     The minimum fraction of a float page that must be occupied by
     floats, for a two-column float page.  Default `.5'.

`\dblfloatsep'
     Distance between floats at the top or bottom of a two-column float
     page.  Default `12pt plus2pt minus2pt' for `10pt' and `11pt'
     documents, `14pt plus2pt minus4pt' for `12pt'.

`\dbltextfloatsep'
     Distance between a multi-column float at the top or bottom of a
     page and the main text.  Default `20pt plus2pt minus4pt'.


5.3 `\flushbottom'
==================

The `\flushbottom' declaration makes all text pages the same height,
adding extra vertical space where necessary to fill out the page.

   This is the default if `twocolumn' mode is selected (*note Document
class options::).

5.4 `\raggedbottom'
===================

The `\raggedbottom' declaration makes all pages the natural height of
the material on that page.  No rubber lengths will be stretched.

5.5 Page layout parameters
==========================

`\headheight'
     Height of the box that contains the running head.  Default is
     `30pt', except in the `book' class, where it varies with the type
     size.

`\headsep'
     Vertical distance between the bottom of the header line and the
     top of the main text.  Default is `25pt', except in the `book'
     class, where it varies with the type size.

`\footskip'
     Distance from the baseline of the last line of text to the
     baseline of the page footer.  Default is `30pt', except in the
     `book' class, where it varies with the type size.

`\linewidth'
     Width of the current line; the default varies with the font size,
     paper width, two-column mode, etc.  For an `article' document in
     `10pt', it's set to `345pt'; in two-column mode, that becomes
     `229.5pt'.

`\textheight'
     The normal vertical height of the page body; the default varies
     with the font size, document class, etc.  For an `article' or
     `report' document in `10pt', it's set to `43\baselineskip'; for
     `book', it's `41\baselineskip'.  For `11pt', it's
     `38\baselineskip' and for `12pt', `36\baselineskip'.

`\textwidth'
     The normal horizontal width of the page body; the default varies as
     usual.  For an `article' or `report' document, it's `345pt' at
     `10pt', `360pt' at `11pt', and `390pt' at `12pt'.  For a `book'
     document, it's `4.5in' at `10pt', and `5in' at `11pt' or `12pt'.

`\topmargin'
     Space between the top of the TeX page (one inch from the top of the
     paper, by default) and the top of the header.  The default is
     computed based on many other parameters: `\paperheight - 2in -
     \headheight - \headsep - \textheight - \footskip', and then
     divided by two.

`\topskip'
     Minimum distance between the top of the page body and the baseline
     of the first line of text.  For the standard clases, the default
     is the same as the font size, e.g., `10pt' at `10pt'.


6 Sectioning
************

Sectioning commands provide the means to structure your text into units:

`\part'

`\chapter'
     (report and book class only)

`\section'

`\subsection'

`\subsubsection'

`\paragraph'

`\subparagraph'

   All sectioning commands take the same general form, e.g.,

     \chapter[TOCTITLE]{TITLE}

   In addition to providing the heading TITLE in the main text, the
section title can appear in two other places:

  1. The table of contents.

  2. The running head at the top of the page.

   You may not want the same text in these places as in the main text.
To handle this, the sectioning commands have an optional argument
TOCTITLE that, when given, specifies the text for these other places.

   Also, all sectioning commands have `*'-forms that print TITLE as
usual, but do not include a number and do not make an entry in the
table of contents.  For instance:

     \section*{Preamble}

   The `\appendix' command changes the way following sectional units
are numbered.  The `\appendix' command itself generates no text and
does not affect the numbering of parts.  The normal use of this command
is something like

     \chapter{A Chapter}
     ...
     \appendix
     \chapter{The First Appendix}

7 Cross references
******************

One reason for numbering things like figures and equations is to refer
the reader to them, as in "See Figure 3 for more details."

7.1 `\label'
============

Synopsis:

     \label{KEY}

   A `\label' command appearing in ordinary text assigns to KEY the
number of the current sectional unit; one appearing inside a numbered
environment assigns that number to KEY.

   A KEY name can consist of any sequence of letters, digits, or
punctuation characters.  Upper and lowercase letters are distinguished.

   To avoid accidentally creating two labels with the same name, it is
common to use labels consisting of a prefix and a suffix separated by a
colon or period. Some conventionally-used prefixes:

`ch'
     for chapters

`sec'
     for lower-level sectioning commands

`fig'
     for figures

`tab'
     for tables

`eq'
     for equations

   Thus, a label for a figure would look like `fig:snark' or
`fig.snark'.

7.2 `\pageref{KEY}'
===================

Synopsis:

     \pageref{KEY}

   The `\pageref'{KEY} command produces the page number of the place in
the text where the corresponding `\label'{KEY} command appears.

7.3 `\ref{KEY}'
===============

Synopsis:

     \ref{KEY}

   The `\ref' command produces the number of the sectional unit,
equation, footnote, figure, ..., of the corresponding `\label' command
(*note \label::).  It does not produce any text, such as the word
`Section' or `Figure', just the bare number itself.

8 Environments
**************

LaTeX provides many environments for marking off certain text.  Each
environment begins and ends in the same manner:

     \begin{ENVNAME}
     ...
     \end{ENVNAME}

8.1 `abstract'
==============

Synopsis:
     \begin{abstract}
     ...
     \end{abstract}

   Environment for producing an abstract, possibly of multiple
paragraphs.

8.2 `array'
===========

Synopsis:

     \begin{array}{TEMPLATE}
     COL1 TEXT&COL1 TEXT&COLN}\\
     ...
     \end{array}

   Math arrays are produced with the `array' environment, normally
within an `equation' environment (*note equation::).  It has a single
mandatory TEMPLATE argument describing the number of columns and the
alignment within them.  Each column COL is specified by a single letter
that tells how items in that row should be formatted, as follows:

`c'
     centered

`l'
     flush left

`r'
     flush right

   Column entries are separated by `&'.  Column entries may include
other LaTeX commands.  Each row of the array is terminated with `\\'.

   In the template, the construct `@{TEXT}' puts TEXT between columns
in each row.

   Here's an example:

     \begin{equation}
       \begin{array}{lrc}
       left1 & right1 & centered1 \\
       left2 & right2 & centered2 \\
       \end{array}
     \end{equation}

   The `\arraycolsep' parameter defines half the width of the space
separating columns; the default is `5pt'.  *Note tabular::, for other
parameters which affect formatting in `array' environments, namely
`\arrayrulewidth' and `\arraystretch'.

   The `array' environment can only be used in math mode.

8.3 `center'
============

Synopsis:

     \begin{center}
     LINE1 \\
     LINE2 \\
     \end{center}

   The `center' environment allows you to create a paragraph consisting
of lines that are centered within the left and right margins on the
current page.  Each line is terminated with the string `\\'.

8.3.1 `\centering'
------------------

The `\centering' declaration corresponds to the `center' environment.
This declaration can be used inside an environment such as `quote' or
in a `parbox'.  Thus, the text of a figure or table can be centered on
the page by putting a `\centering' command at the beginning of the
figure or table environment.

   Unlike the `center' environment, the `\centering' command does not
start a new paragraph; it simply changes how LaTeX formats paragraph
units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or `\end' command (of an
environment such as quote) that ends the paragraph unit.

   Here's an example:

     \begin{quote}
     \centering
     first line \\
     second line \\
     \end{quote}

8.4 `description'
=================

Synopsis:

     \begin{description}
     \item [LABEL1] ITEM1
     \item [LABEL2] ITEM2
     ...
     \end{description}

   The `description' environment is used to make labelled lists.  Each
LABEL is typeset in bold, flush right.  The ITEM text may contain
multiple paragraphs.

   Another variation: since the bold style is applied to the labels, if
you typeset a label in typewriter using `\texttt', you'll get bold
typewriter: `\item[\texttt{bold and typewriter}]'.  This may be too
bold, among other issues.  To get just typewriter, use `\tt', which
resets all other style variations: `\item[{\tt plain typewriter}]'.

   For details about list spacing, see *Note itemize::.

8.5 `displaymath'
=================

Synopsis:
     \begin{displaymath}
     MATH
     \end{displaymath}

or

     \[MATH\]

   The `displaymath' environment (`\[...\]' is a synonym) typesets the
MATH text on its own line, centered by default.  The global `fleqn'
option makes equations flush left; see *Note Document class options::.

   No equation number is added to `displaymath' text; to get an
equation number, use the `equation' environment (*note equation::).

8.6 `document'
==============

The `document' environment encloses the body of a document.  It is
required in every LaTeX document.  *Note Starting & ending::.

8.7 `enumerate'
===============

Synopsis:

     \begin{enumerate}
     \item ITEM1
     \item ITEM2
     ...
     \end{enumerate}

   The `enumerate' environment produces a numbered list.  Enumerations
can be nested within one another, up to four levels deep.  They can also
be nested within other paragraph-making environments, such as `itemize'
(*note itemize::) and `description' (*note description::).

   Each item of an enumerated list begins with an `\item' command.
There must be at least one `\item' command within the environment.

   By default, the numbering at each level is done like this:

  1. 1., 2., ...

  2. (a), (b), ...

  3. i., ii., ...

  4. A., B., ...

   The `enumerate' environment uses the counters `\enumi' through
`\enumiv' counters (*note Counters::).  If the optional argument to
`\item' is given, the counter is not incremented for that item.

   The `enumerate' environment uses the commands `\labelenumi' through
`\labelenumiv' to produce the default label.  So, you can use
`\renewcommand' to change the labels (*note \newcommand &
\renewcommand::).  For instance, to have the first level use uppercase
letters:

     \renewcommand{\labelenumi}{\Alph{enumi}}

8.8 `eqnarray'
==============

     \begin{eqnarray}  (or `eqnarray*')
     FORMULA1 \\
     FORMULA2 \\
     ...
     \end{eqnarray}

   The `eqnarray' environment is used to display a sequence of
equations or inequalities.  It is very much like a three-column `array'
environment, with consecutive rows separated by `\\' and consecutive
items within a row separated by an `&'.

   `\\*' can also be used to separate equations, with its normal
meaning of not allowing a page break at that line.

   An equation number is placed on every line unless that line has a
`\nonumber' command.  Alternatively, The `*'-form of the environment
(`\begin{eqnarray*} ... \end{eqnarray*}') will omit equation numbering
entirely, while otherwise being the same as `eqnarray'.

   The command `\lefteqn' is used for splitting long formulas across
lines. It typesets its argument in display style flush left in a box of
zero width.

8.9 `equation'
==============

Synopsis:

     \begin{equation}
     MATH
     \end{equation}

   The `equation' environment starts a `displaymath' environment (*note
displaymath::), e.g., centering the MATH text on the page, and also
places an equation number in the right margin.

8.10 `figure'
=============

     \begin{figure}[PLACEMENT]
     FIGBODY
     \label{LABEL}
     \caption[LOFTITLE]{TEXT}
     \end{figure}

   Figures are objects that are not part of the normal text, and are
instead "floated" to a convenient place, such as the top of a page.
Figures will not be split between two pages.

   The optional argument `[placement]' determines where LaTeX will try
to place your figure.  There are four places where LaTeX can possibly
put a float:

  1. `h' (Here) - at the position in the text where the figure
     environment appears.

  2. `t' (Top) - at the top of a text page.

  3. `b' (Bottom) - at the bottom of a text page.

  4. `p' (Page of floats) - on a separate float page, which is a page
     containing no text, only floats.

   The standard report and article classes use the default placement
`tbp'.

   The body of the figure is made up of whatever text, LaTeX commands,
etc.  you wish.

   The `\caption' command specifies caption TEXT for the figure.  The
caption is numbered by default.  If LOFTITLE is present, it is used in
the list of figures instead of TEXT (*note Tables of contents::).

     The maximum fraction of the page allowed to be occuped by floats at
     the bottom; default `.3'.

`\floatpagefraction'
     The minimum fraction of a float page that must be occupied by
     floats; default `.5'.

`\floatsep'
     Space between floats at the top or bottom of a page; default `12pt
     plus2pt minus2pt'.

`\intextsep'
     Space above and below a float in the middle of the main text;
     default `12pt plus2pt minus2pt' for `10pt' and `11pt' styles,
     `14pt plus4pt minus4pt' for `12pt'.

`\textfloatsep'
     Space between the last (first) float at the top (bottom) of a page;
     default `20pt plus2pt minus4pt'.

`\textfraction'
     Minimum fraction of a page that must be text; if floats take up too
     much space to preserve this much text, floats will be moved to a
     different page.  The default is `.2'.

`\topfraction'
     Maximum fraction at the top of a page that may be occupied before
     floats; default is `.7'.


8.11 `flushleft'
================

     \begin{flushleft}
     LINE1 \\
     LINE2 \\
     ...
     \end{flushleft}

   The `flushleft' environment allows you to create a paragraph
consisting of lines that are flush to the left-hand margin and ragged
right Each line must be terminated with the string `\\'.

8.11.1 `\raggedright'
---------------------

The `\raggedright' declaration corresponds to the `flushleft'
environment.  This declaration can be used inside an environment such
as `quote' or in a `parbox'.

   Unlike the `flushleft' environment, the `\raggedright' command does
not start a new paragraph; it only changes how LaTeX formats paragraph
units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or `\end' command that ends the
paragraph unit.

8.12 `flushright'
=================

     \begin{flushright}
     LINE1 \\
     LINE2 \\
     ...
     \end{flushright}

   The `flushright' environment allows you to create a paragraph
consisting of lines that are flush to the right-hand margin and ragged
left.  Each line must be terminated with the string `\\'.

8.12.1 `\raggedleft'
--------------------

The `\raggedleft' declaration corresponds to the `flushright'
environment.  This declaration can be used inside an environment such
as `quote' or in a `parbox'.

   Unlike the `flushright' environment, the `\raggedleft' command does
not start a new paragraph; it only changes how LaTeX formats paragraph
units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or `\end' command that ends the
paragraph unit.

8.13 `itemize'
==============

Synopsis:

     \begin{itemize}
     \item ITEM1
     \item ITEM2
     ...
     \end{itemize}

   The `itemize' environment produces an "unordered", "bulleted" list.
Itemizations can be nested within one another, up to four levels deep.
They can also be nested within other paragraph-making environments,
such as `enumerate' (*note enumerate::).

   Each item of an `itemize' list begins with an `\item' command.
There must be at least one `\item' command within the environment.

   By default, the marks at each level look like this:

  1. *

  2. -- (bold en-dash)

  3. *

  4. . (centered dot, rendered here as a period)

   The `itemize' environment uses the commands `\labelitemi' through
`\labelitemiv' to produce the default label.  So, you can use
`\renewcommand' to change the labels.  For instance, to have the first
level use diamonds:

     \renewcommand{\labelitemi}{$\diamond$}

   The `\leftmargini' through `\leftmarginvi' parameters define the
distance between the left margin of the enclosing environment and the
left margin of the list.  By convention, `\leftmargin' is set to the
appropriate `\leftmarginN' when a new level of nesting is entered.

   The defaults vary from `.5em' (highest levels of nesting) to `2.5em'
(first level), and are a bit reduced in two-column mode.  This example
greatly reduces the margin space for outermost lists:

     \setlength{\leftmargini}{1.25em} % default 2.5em

   Some parameters that affect list formatting:

`\itemindent'
     Extra indentation before each item in a list; default zero.

`\labelsep'
     Space between the label and text of an item; default `.5em'.

`\labelwidth'
     Width of the label; default `2em', or `1.5em' in two-column mode.

`\listparindent'
     Extra indentation added to second and subsequent paragraphs within
     a list item; default `0pt'.

`\rightmargin'
     Horizontal distance between the right margin of the list and the
     enclosing environment; default `0pt', except in the `quote',
     `quotation', and `verse' environments, where it is set equal to
     `\leftmargin'.


   Parameters affecting vertical spacing between list items (rather
loose, by default).

`\itemsep'
     Vertical space between items.  The default is `2pt plus1pt
     minus1pt' for `10pt' documents, `3pt plus2pt minus1pt' for `11pt',
     and `4.5pt plus2pt minus1pt' for `12pt'.

`\parsep'
     Extra vertical space between paragraphs within a list item.
     Defaults are the same as `\itemsep'.

`\topsep'
     Vertical space between the first item and the preceding paragraph.
     The default is `4pt plus2pt minus2pt' for `10pt' documents, `6pt
     plus2pt minus2pt' for `11pt', and `9pt plus3pt minus5pt' for
     `12pt'.

`\partopsep'
     Extra space added to `\topsep' when the list environment starts a
     paragraph.  The default is `2pt plus1pt minus1pt' for `10pt'
     documents, `3pt plus1pt minus1pt' for `11pt', and `3pt plus2pt
     minus2pt' for `12pt'.

`\topsep'
     Extra vertical space added before an initial and after a final list
     item.  Its value is changed with list level and font size changes;
     for instance, within a first-level list at `10pt', it is `4pt
     plus2pt minus2pt'.


   Especially for lists with short items, it may be desirable to elide
space between items.  Here is an example defining an `itemize*'
environment with no extra spacing between items, or between paragraphs
within a single item (`\parskip' is not list-specific, *note
\parskip::):

     \newenvironment{itemize*}%
       {\begin{itemize}%
         \setlength{\itemsep}{0pt}%
         \setlength{\parsep}{0pt}}%
         \setlength{\parskip}{0pt}}%
       {\end{itemize}}

8.14 `letter' environment: writing letters
==========================================

This environment is used for creating letters.  *Note Letters::.

8.15 `list'
===========

The `list' environment is a generic environment which is used for
defining many of the more specific environments. It is seldom used in
documents, but often in macros.

     \begin{list}{LABELING}{SPACING}
     \item ITEM1
     \item ITEM2
     ...
     \end{list}

   The mandatory LABELING argument specifies how items should be
labelled (unless the optional argument is supplied to `\item').  This
argument is a piece of text that is inserted in a box to form the
label.  It can and usually does contain other LaTeX commands.

   The mandatory SPACING argument contains commands to change the
spacing parameters for the list.  This argument will most often be
empty, i.e., `{}', which leaves the default spacing.

8.16 `math'
===========

Synopsis:

     \begin{math}
     MATH
     \end{math}

   The `math' environment inserts the given MATH within the running
text.  `\(...\))' and `$...$' are synonyms.  *Note Math formulas::.

8.17 `minipage'
===============

     \begin{minipage}[POSITION]{WIDTH}
     TEXT
     \end{minipage}

   The `minipage' environment typesets its body TEXT in a block that
will not be broken across pages (similar to the `\parbox' command,
*note \parbox::).  You may use other paragraph-making environments
inside a minipage (unlike `\parbox').

   It takes an optional POSITION argument for placing TEXT, and a
mandatory WIDTH argument for specifying the line width.

   By default, paragraphs are not indented in the `minipage'
environment.  You can restore indentation with a command such as
`\setlength{\parindent}{1pc}' command.

   Footnotes in a `minipage' environment are handled in a way that is
particularly useful for putting footnotes in figures or tables.  A
`\footnote' or `\footnotetext' command puts the footnote at the bottom
of the minipage instead of at the bottom of the page, and it uses the
`\mpfootnote' counter instead of the ordinary `footnote' counter (*note
Counters::).

   However, don't put one minipage inside another if you are using
footnotes; they may wind up at the bottom of the wrong minipage.

8.18 `picture'
==============

     \begin{picture}(width,height)(x offset,y offset)
     ... PICTURE COMMANDS ...
     \end{picture}

   The `picture' environment allows you to create just about any kind
of picture you want containing text, lines, arrows and circles.  You
tell LaTeX where to put things in the picture by specifying their
coordinates.  A coordinate is a number that may have a decimal point
and a minus sign--a number like `5', `0.3' or `-3.1416'.  A coordinate
specifies a length in multiples of the unit length `\unitlength', so if
`\unitlength' has been set to `1cm', then the coordinate 2.54 specifies
a length of 2.54 centimeters.  You should only change the value of
`\unitlength', using the `\setlength' command, outside of a `picture'
environment.

   A position is a pair of coordinates, such as `(2.4,-5)', specifying
the point with x-coordinate `2.4' and y-coordinate `-5'.  Coordinates
are specified in the usual way with respect to an origin, which is
normally at the lower-left corner of the picture.  Note that when a
position appears as an argument, it is not enclosed in braces; the
parentheses serve to delimit the argument.

   The `picture' environment has one mandatory argument, which is a
`position'.  It specifies the size of the picture.  The environment
produces a rectangular box with width and height determined by this
argument's x- and y-coordinates.

   The `picture' environment also has an optional `position' argument,
following the `size' argument, that can change the origin.  (Unlike
ordinary optional arguments, this argument is not contained in square
brackets.) The optional argument gives the coordinates of the point at
the lower-left corner of the picture (thereby determining the origin).
For example, if `\unitlength' has been set to `1mm', the command
        \begin{picture}(100,200)(10,20)
   produces a picture of width 100 millimeters and height 200
millimeters, whose lower-left corner is the point (10,20) and whose
upper-right corner is therefore the point (110,220).  When you first
draw a picture, you will omit the optional argument, leaving the origin
at the lower-left corner.  If you then want to modify your picture by
shifting everything, you just add the appropriate optional argument.

   The environment's mandatory argument determines the nominal size of
the picture.  This need bear no relation to how large the picture
really is; LaTeX will happily allow you to put things outside the
picture, or even off the page.  The picture's nominal size is used by
LaTeX in determining how much room to leave for it.

   Everything that appears in a picture is drawn by the `\put' command.
The command

     \put (11.3,-.3){...}

puts the object specified by `...' in the picture, with its reference
point at coordinates (11.3,-.3).  The reference points for various
objects will be described below.

   The `\put' command creates an "LR box".  You can put anything that
can go in an `\mbox' (*note \mbox::) in the text argument of the `\put'
command.  When you do this, the reference point will be the lower left
corner of the box.

   The `picture' commands are described in the following sections.

8.18.1 `\circle'
----------------

     \circle[*]{DIAMETER}

   The `\circle' command produces a circle with a diameter as close to
the specified one as possible.  The `*'-form of the command draws a
solid circle.

   Circles up to 40 pt can be drawn.

8.18.2 `\makebox'
-----------------

`\makebox(width,height)[position]{...}'

   The `\makebox' command for the picture environment is similar to the
normal `\makebox' command except that you must specify a `width' and
`height' in multiples of `\unitlength'.

   The optional argument, `[position]', specifies the quadrant that
your text appears in.  You may select up to two of the following:

   * `t' - Moves the item to the top of the rectangle

   * `b' - Moves the item to the bottom

   * `l' - Moves the item to the left

   * `r' - Moves the item to the right

   *Note \makebox::.

8.18.3 `\framebox'
------------------

Synopsis:

     \framebox(WIDTH,HEIGHT)[POS]{...}

   The `\framebox' command is like `\makebox' (see previous section),
except that it puts a frame around the outside of the box that it
creates.

   The `\framebox' command produces a rule of thickness `\fboxrule',
and leaves a space `\fboxsep' between the rule and the contents of the
box.

8.18.4 `\dashbox'
-----------------

Draws a box with a dashed line.  Synopsis:

     \dashbox{DLEN}(RWIDTH,RHEIGHT)[POS]{TEXT}

   `\dashbox' creates a dashed rectangle around TEXT in a `picture'
environment.  Dashes are DLEN units long, and the rectangle has overall
width RWIDTH and height RHEIGHT.  The TEXT is positioned at optional
POS.   A dashed box looks best when the `rwidth' and `rheight' are
multiples of the `dlen'.

8.18.5 `\frame'
---------------

Synopsis:

     \frame{TEXT}

   The `\frame' command puts a rectangular frame around TEXT.  The
reference point is the bottom left corner of the frame.  No extra space
is put between the frame and the object.

8.18.6 `\line'
--------------

Synopsis:

     \line(XSLOPE,YSLOPE){LENGTH}

   The `\line' command draws a line with the given LENGTH and slope
XSLOPE/YSLOPE.

   Standard LaTeX can only draw lines with SLOPE = x/y, where x and y
have integer values from -6 through 6.  For lines of any slope, not to
mention other shapes, see the `curve2e' and many many other packages on
CTAN.

8.18.7 `\linethickness'
-----------------------

The `\linethickness{DIM}' command declares the thickness of horizontal
and vertical lines in a picture environment to be DIM, which must be a
positive length.

   `\linethickness' does not affect the thickness of slanted lines,
circles, or the quarter circles drawn by `\oval'.

8.18.8 `\thicklines'
--------------------

The `\thicklines' command is an alternate line thickness for horizontal
and vertical lines in a picture environment; cf. *Note \linethickness::
and *Note \thinlines::.

8.18.9 `\thinlines'
-------------------

The `\thinlines' command is the default line thickness for horizontal
and vertical lines in a picture environment; cf. *Note \linethickness::
and *Note \thicklines::.

8.18.10 `\multiput'
-------------------

Synopsis:
     \multiput(X,Y)(DELTA_X,DELTA_Y){N}{OBJ}

   The `\multiput' command copies the object OBJ in a regular pattern
across a picture.  OBJ is first placed at position (x,y), then at
(x+\delta x,y+\delta y), and so on, N times.

8.18.11 `\oval'
---------------

Synopsis:

     \oval(WIDTH,HEIGHT)[PORTION]

   The `\oval' command produces a rectangle with rounded corners.  The
optional argument PORTION allows you to select part of the oval via the
following:

`t'
     selects the top portion;

`b'
     selects the bottom portion;

`r'
     selects the right portion;

`l'
     selects the left portion.

   The "corners" of the oval are made with quarter circles with a
maximum radius of 20pt, so large "ovals" will look more like boxes with
rounded corners.

8.18.12 `\put'
--------------

`\put(x coord,y coord){ ...  }'

   The `\put' command places the item specified by the mandatory
argument at the given coordinates.

8.18.13 `\shortstack'
---------------------

Synopsis:

     \shortstack[POSITION]{...\\...\\...}

   The `\shortstack' command produces a stack of objects.  The valid
positions are:

`r'
     Move the objects to the right of the stack.

`l'
     Move the objects to the left of the stack

`c'
     Move the objects to the centre of the stack (default)

   Objects are separated with `\\'.

8.18.14 `\vector'
-----------------

Synopsis:

     \vector(X-SLOPE,Y-SLOPE){LENGTH}

   The `\vector' command draws a line with an arrow of the specified
length and slope.  The x and y values must lie between -4 and +4,
inclusive.

8.19 `quotation'
================

Synopsis:

     \begin{quotation}
     TEXT
     \end{quotation}

   The margins of the `quotation' environment are indented on both the
left and the right.  The text is justified at both margins.  Leaving a
blank line between text produces a new paragraph.

   Unlike the `quote' environment, each paragraph is indented normally.

8.20 `quote'
============

Snyopsis:

     \begin{quote}
     TEXT
     \end{quote}

   The margins of the `quote' environment are indented on both the left
and the right.  The text is justified at both margins.  Leaving a blank
line between text produces a new paragraph.

   Unlike the `quotation' environment, paragraphs are not indented.

8.21 `tabbing'
==============

Synopsis:

     \begin{tabbing}
     ROW1COL1 \= ROW1COL2 \= ROW1COL3 \= ROW1COL4 \\
     ROW2COL1 \>                \> ROW2COL3 \\
     ...
     \end{tabbing}

   The `tabbing' environment provides a way to align text in columns.
It works by setting tab stops and tabbing to them much as was done on
an ordinary typewriter.  It is best suited for cases where the width of
each column is constant and known in advance.

   This environment can be broken across pages, unlike the `tabular'
environment.

   The following commands can be used inside a `tabbing' enviroment:

`\\ tabbing'
     End a line.

`\= (tabbing)'
     Sets a tab stop at the current position.

`\> (tabbing)'
     Advances to the next tab stop.

`\<'
     Put following text to the left of the local margin (without
     changing the margin).  Can only be used at the start of the line.

`\+'
     Moves the left margin of the next and all the following commands
     one tab stop to the right, beginning tabbed line if necessary.

`\-'
     Moves the left margin of the next and all the following commands
     one tab stop to the left, beginning tabbed line if necessary.

`\' (tabbing)'
     Moves everything that you have typed so far in the current column,
     i.e. everything from the most recent `\>', `\<', `\'', `\\', or
     `\kill' command, to the right of the previous column, flush
     against the current column's tab stop.

`\` (tabbing)'
     Allows you to put text flush right against any tab stop, including
     tab stop 0.  However, it can't move text to the right of the last
     column because there's no tab stop there.  The `\`' command moves
     all the text that follows it, up to the `\\' or `\end{tabbing}'
     command that ends the line, to the right margin of the tabbing
     environment.  There must be no `\>' or `\'' command between the
     `\`' and the command that ends the line.

`\a (tabbing)'
     In a `tabbing' environment, the commands `\=', `\'' and `\`' do
     not produce accents as usual (*note Accents::).  Instead, the
     commands `\a=', `\a'' and `\a`' are used.

`\kill'
     Sets tab stops without producing text.  Works just like `\\'
     except that it throws away the current line instead of producing
     output for it.  The effect of any `\=', `\+' or `\-' commands in
     that line remain in effect.

`\poptabs'
     Restores the tab stop positions saved by the last `\pushtabs'.

`\pushtabs'
     Saves all current tab stop positions. Useful for temporarily
     changing tab stop positions in the middle of a `tabbing'
     environment.

`\tabbingsep'
     Distance to left of tab stop moved by `\''.


   This example typesets a Pascal function in a traditional format:

     \begin{tabbing}
     function \= fact(n : integer) : integer;\\
              \> begin \= \+ \\
                    \> if \= n $>$ 1 then \+ \\
                             fact := n * fact(n-1) \- \\
                       else \+ \\
                             fact := 1; \-\- \\
                 end;\\
     \end{tabbing}

8.22 `table'
============

Synopsis:

      \begin{table}[placement]

       body of the table

      \caption{table title}
      \end{table}

   Tables are objects that are not part of the normal text, and are
usually "floated" to a convenient place, like the top of a page.
Tables will not be split between two pages.

   The optional argument `[placement]' determines where LaTeX will try
to place your table.  There are four places where LaTeX can possibly put
a float:

   * `h': Here - at the position in the text where the table
     environment appears.

   * `t': Top - at the top of a text page.

   * `b': Bottom - at the bottom of a text page.

   * `p': Page of floats - on a separate float page, which is a page
     containing no text, only floats.

   The standard `report' and `article' classes use the default
placement `[tbp]'.

   The body of the table is made up of whatever text, LaTeX commands,
etc., you wish.  The `\caption' command allows you to title your table.

8.23 `tabular'
==============

Synopsis:

     \begin{tabular}[pos]{cols}
     column 1 entry & column 2 entry ... & column n entry \\
     ...
     \end{tabular}

   or

     \begin{tabular*}{width}[pos]{cols}
     column 1 entry & column 2 entry ... & column n entry \\
     ...
     \end{tabular*}

   These environments produce a box consisting of a sequence of rows of
items, aligned vertically in columns.

   `\\' must be used to specify the end of each row of the table,
except for the last, where it is optional--unless an `\hline' command
(to put a rule below the table) follows.

   The mandatory and optional arguments consist of:

`width'
     Specifies the width of the `tabular*' environment.  There must be
     rubber space between columns that can stretch to fill out the
     specified width.

`pos'
     Specifies the vertical position; default is alignment on the
     centre of the environment.

        * `t' - align on top row

        * `b' - align on bottom row

`cols'
     Specifies the column formatting.  It consists of a sequence of the
     following specifiers, corresponding to the sequence of columns and
     intercolumn material.

        * `l' - A column of left-aligned items.

        * `r' - A column of right-aligned items.

        * `c' - A column of centred items.

        * `|' - A vertical line the full height and depth of the
          environment.

        * `@{text}' - This inserts `text' in every row.  An @-expression
          suppresses the intercolumn space normally inserted between
          columns; any desired space between the inserted text and the
          adjacent items must be included in text.  An
          `\extracolsep{wd}' command in an @-expression causes an extra
          space of width `wd' to appear to the left of all subsequent
          columns, until countermanded by another `\extracolsep'
          command.  Unlike ordinary intercolumn space, this extra space
          is not suppressed by an @-expression.  An `\extracolsep'
          command can be used only in an @-expression in the `cols'
          argument.

        * `p{wd}' - Produces a column with each item typeset in a
          parbox of width `wd', as if it were the argument of a
          `\parbox[t]{wd}' command.  However, a `\\' may not appear in
          the item, except in the following situations:
            1. inside an environment like `minipage', `array', or
               `tabular'.

            2. inside an explicit `\parbox'.

            3. in the scope of a `\centering', `\raggedright', or
               `\raggedleft' declaration.  The latter declarations must
               appear inside braces or an environment when used in a
               `p'-column element.

        * `*{num}{cols}' - Equivalent to `num' copies of `cols', where
          `num' is any positive integer and `cols' is any list of
          column-specifiers, which may contain another `*-expression'.



   Parameters that control formatting:

`\arrayrulewidth'
     Thickness of the rule created by `|', `\hline', and `\vline' in
     the `tabular' and `array' environments; the default is `.4pt'.

`\arraystretch'
     Scaling of spacing between rows in the `tabular' and `array'
     environments; default is `1',for no scaling.

`\doublerulesep'
     Horizontal distance between the vertical rules produced by `||' in
     the `tabular' and `array' environments; default is `2pt'.

`\tabcolsep'
     Half the width of the space between columns; default is `6pt'.


   These commands can be used inside a `tabular' environment:

8.23.1 `\multicolumn'
---------------------

Synopsis:
     \multicolumn{COLS}{POS}{TEXT}

   The `\multicolumn' command makes an entry that spans several
columns.  The first mandatory argument, COLS, specifies the number of
columns to span.  The second mandatory argument, POS, specifies the
formatting of the entry; `c' for centered, `l' for flushleft, `r' for
flushright.  The third mandatory argument, TEXT, specifies what text to
put in the entry.

   Here's an example showing two columns separated by an en-dash;
`\multicolumn' is used for the heading:

     \begin{tabular}{r@{--}l}
     \multicolumn{2}{c}{\bf Unicode}\cr
        0x80&0x7FF   \cr
       0x800&0xFFFF  \cr
     0x10000&0x1FFFF \cr
     \end{tabular}

8.23.2 `\cline'
---------------

Synopsis:

     \cline{I-J}

   The `\cline' command draws horizontal lines across the columns
specified, beginning in column I and ending in column J, which are
specified in the mandatory argument.

8.23.3 `\hline'
---------------

The `\hline' command draws a horizontal line the width of the enclosing
`tabular' or `array' environment.  It's most commonly used to draw a
line at the top, bottom, and between the rows of a table.

8.23.4 `\vline'
---------------

The `\vline' command will draw a vertical line extending the full
height and depth of its row.  An `\hfill' command can be used to move
the line to the edge of the column.  It can also be used in an
@-expression.

8.24 `thebibliography'
======================

Synopsis:

     \begin{thebibliography}{WIDEST-LABEL}
     \bibitem[LABEL]{CITE_KEY}
     ...
     \end{thebibliography}

   The `thebibliography' environment produces a bibliography or
reference list.

   In the `article' class, this reference list is labelled
"References"; in the `report' class, it is labelled "Bibliography".
You can change the label (in the standard classes) by redefining the
command `\refname'.  For instance, this eliminates it entirely:

     \renewcommand{\refname}{}

   The mandatory WIDEST-LABEL argument is text that, when typeset, is
as wide as the widest item label produced by the `\bibitem' commands.
It is typically given as `9' for bibliographies with less than 10
references, `99' for ones with less than 100, etc.

8.24.1 `\bibitem'
-----------------

Synopsis:
     \bibitem[LABEL]{CITE_KEY}

   The `\bibitem' command generates an entry labelled by LABEL.  If the
LABEL argument is missing, a number is automatically generated using
the `enumi' counter.  The CITE_KEY is any sequence of letters, numbers,
and punctuation symbols not containing a comma.

   This command writes an entry to the `.aux' file containing the
item's CITE_KEY and label.  When the `.aux' file is read by the
`\begin{document}' command, the item's `label' is associated with
`cite_key', causing references to CITE_KEY with a `\cite' command (see
next section) to produce the associated label.

8.24.2 `\cite'
--------------

Synopsis:

     \cite[SUBCITE]{KEYS

   The KEYS argument is a list of one or more citation keys, separated
by commas.  This command generates an in-text citation to the
references associated with KEYS by entries in the `.aux' file.

   The text of the optional SUBCITE argument appears after the
citation.  For example, `\cite[p.~314]{knuth}' might produce `[Knuth,
p. 314]'.

8.24.3 `\nocite'
----------------

`\nocite{key_list}'

   The `\nocite' command produces no text, but writes `key_list', which
is a list of one or more citation keys, on the `.aux' file.

8.24.4 Using BibTeX
-------------------

If you use the BibTeX program by Oren Patashnik (highly recommended if
you need a bibliography of more than a couple of titles) to maintain
your bibliography, you don't use the `thebibliography' environment
(*note thebibliography::). Instead, you include the lines

     \bibliographystyle{BIBSTYLE}
     \bibliography{BIBFILE1,BIBFILE2}

   The `\bibliographystyle' command does not produce any output of its
own.  Rather, it defines the style in which the bibliography will be
produced: BIBSTYLE refers to a file BIBSTYLE`.bst', which defines how
your citations will look.  The standard STYLE names distributed with
BibTeX are:

`alpha'
     Sorted alphabetically. Labels are formed from name of author and
     year of publication.

`plain'
     Sorted alphabetically. Labels are numeric.

`unsrt'
     Like `plain', but entries are in order of citation.

`abbrv'
     Like `plain', but more compact labels.

   In addition, numerous other BibTeX style files exist tailored to the
demands of various publications.  See
`http://www.ctan.org/tex-archive/biblio/bibtex/contrib'.

   The `\bibliography' command is what actually produces the
bibliography.  The argument to `\bibliography' refers to files named
`BIBFILE.bib', which should contain your database in BibTeX format.
Only the entries referred to via `\cite' and `\nocite' will be listed
in the bibliography.

8.25 `theorem'
==============

Synopsis:

     \begin{theorem}
     THEOREM-TEXT
     \end{theorem}

   The `theorem' environment produces "Theorem N" in boldface followed
by THEOREM-TEXT, where the numbering possibilities for N are described
under `\newtheorem' (*note \newtheorem::).

8.26 `titlepage'
================

Synopsis:

     \begin{titlepage}
     TEXT
     \end{titlepage}

   The `titlepage' environment creates a title page, i.e., a page with
no printed page number or heading.  It also causes the following page
to be numbered page one.  Formatting the title page is left to you.
The `\today' command may be useful on title pages (*note \today::).

   You can use the `\maketitle' command (*note \maketitle::) to produce
a standard title page without a `titlepage' environment.

8.27 `verbatim'
===============

Synopsis:

     \begin{verbatim}
     LITERAL-TEXT
     \end{verbatim}

   The `verbatim' environment is a paragraph-making environment in
which LaTeX produces exactly what you type in; for instance the `\'
character produces a printed `\'.  It turns LaTeX into a typewriter
with carriage returns and blanks having the same effect that they would
on a typewriter.

   The `verbatim' uses a monospaced typewriter-like font (`\tt').

8.27.1 `\verb'
--------------

Synopsis:

     \verbCHARLITERAL-TEXTCHAR
     \verb*CHARLITERAL-TEXTCHAR

   The `\verb' command typesets LITERAL-TEXT as it is input, including
special characters and spaces, using the typewriter (`\tt') font.  No
spaces are allowed between `\verb' or `\verb*' and the delimiter CHAR,
which begins and ends the verbatim text.  The delimiter must not appear
in LITERAL-TEXT.

   The `*'-form differs only in that spaces are printed with a "visible
space" character.

8.28 `verse'
============

Synopsis:

     \begin{verse}
     LINE1 \\
     LINE2 \\
     ...
     \end{verse}

   The `verse' environment is designed for poetry, though you may find
other uses for it.

   The margins are indented on the left and the right, paragraphs are
not indented, and the text is not justified.  Separate the lines of each
stanza with `\\', and use one or more blank lines to separate the
stanzas.

9 Footnotes
***********

Footnotes can be produced in one of two ways.  They can be produced
with one command, the `\footnote' command.  They can also be produced
with two commands, the `\footnotemark' and the `\footnotetext' commands.

9.1 `\footnote'
===============

Synopsis:

     \footnote[NUMBER]{TEXT}

   The `\footnote' command places the numbered footnote TEXT at the
bottom of the current page.  The optional argument NUMBER changes the
default footnote number.

   This command can only be used in outer paragraph mode; i.e., you
cannot use it in sectioning commands like `\chapter', in figures,
tables or in a `tabular' environment.  (See following sections.)

9.2 `\footnotemark'
===================

With no optional argument, the `\footnotemark' command puts the current
footnote number in the text.  This command can be used in inner
paragraph mode.  You give the text of the footnote separately, with the
`\footnotetext' command.

   This command can be used to produce several consecutive footnote
markers referring to the same footnote with

     \footnotemark[\value{footnote}]

   after the first `\footnote' command.

9.3 `\footnotetext'
===================

Synopsis:

     \footnotetext[NUMBER]{TEXT}

   The `\footnotetext' command places TEXT at the bottom of the page as
a footnote.  This command can come anywhere after the `\footnotemark'
command.  The `\footnotetext' command must appear in outer paragraph
mode.

   The optional argument NUMBER changes the default footnote number.

9.4 Footnote parameters
=======================

`\footnoterule'
     Produces the rule separating the main text on a page from the
     page's footnotes.  Default dimensions: `0.4pt' thick (or wide), and
     `0.4\columnwidth' long in the standard document classes (except
     slides, where it does not appear).

`\footnotesep'
     The height of the strut placed at the beginning of the footnote.
     By default, this is set to the normal strut for `\footnotesize'
     fonts (*note Font sizes::), therefore there is no extra space
     between footnotes.  This is `6.65pt' for `10pt', `7.7pt' for
     `11pt', and `8.4pt' for `12pt'.


10 Definitions
**************

LaTeX has support for making new commands of many different kinds.

10.1 `\newcommand' & `\renewcommand'
====================================

`\newcommand' and `\renewcommand' define and redefine a command,
respectively.  Synopses:

       \newcommand{CMD}[NARGS]{DEFN}
     \renewcommand{CMD}[NARGS]{DEFN}
       \newcommand{CMD}[NARGS][DEFAULT]{DEFN}
     \renewcommand{CMD}[NARGS][DEFAULT]{DEFN}

CMD
     The command name beginning with `\'.  For `\newcommand', it must
     not be already defined and must not begin with `\end'; for
     `\renewcommand', it must already be defined.

NARGS
     An optional integer from 1 to 9 specifying the number of arguments
     that the command will take.  The default is for the command to
     have no arguments.

DEFAULT
     If this optional parameter is present, it means that the command's
     first argument is optional.  When the new command is called, the
     default value of the optional argument (i.e., if it is not
     specified in the call) is the string `def'.

DEFN
     The text to be substituted for every occurrence of `cmd'; a
     construct of the form `#N' in DEFN is replaced by the text of the
     Nth argument.


10.2 `\newcounter'
==================

Synopsis:

     \newcounter{CNT}[COUNTERNAME]

   The `\newcounter' command defines a new counter named CNT.  The new
counter is initialized to zero.

   Given the optional argument `[COUNTERNAME]', CNT will be reset
whenever COUNTERNAME is incremented.

   *Note Counters::, for more information about counters.

10.3 `\newlength'
=================

Synopsis:

     \newlength{\ARG}

   The `\newlength' command defines the mandatory argument as a
`length' command with a value of `0in'.  The argument must be a control
sequence, as in `\newlength{\foo}'.  An error occurs if `\foo' is
already defined.

   *Note Lengths::, for how to set the new length to a nonzero value,
and for more information about lengths in general.

10.4 `\newsavebox'
==================

Synopsis:

     \newsavebox{CMD}

   Defines `\CMD', which must be a command name not already defined, to
refer to a new bin for storing boxes.

10.5 `\newenvironment' & `\renewenvironment'
============================================

Synopses:

       \newenvironment{ENV}[NARGS]{BEGDEF}{ENDDEF}
       \newenvironment{ENV}[NARGS][DEFAULT]{BEGDEF}{ENDDEF}
     \renewenvironment{ENV}[NARGS]{BEGDEF}{ENDDEF}

   These commands define or redefine an environment ENV, that is,
`\begin{ENV} ... \end{ENV}'.

ENV
     The name of the environment.  For `\newenvironment', ENV must not
     be an existing environment, and the command `\ENV' must be
     undefined.  For `\renewenvironment', ENV must be the name of an
     existing environment.

NARGS
     An integer from 1 to 9 denoting the number of arguments of the
     newly-defined environment.  The default is no arguments.

DEFAULT
     If this is specified, the first argument is optional, and DEFAULT
     gives the default value for that argument.

BEGDEF
     The text expanded at every occurrence of `\begin{ENV}'; a
     construct of the form `#N' in BEGDEF is replaced by the text of
     the Nth argument.

ENDDEF
     The text expanded at every occurrence of `\end{ENV}'.  It may not
     contain any argument parameters.


10.6 `\newtheorem'
==================

     \newtheorem{NEWENV}{LABEL}[WITHIN]
     \newtheorem{NEWENV}[NUMBERED_LIKE]{LABEL}

   This command defines a theorem-like environment.  Arguments:

NEWENV
     The name of the environment to be defined; must not be the name of
     an existing environment or otherwise defined.

LABEL
     The text printed at the beginning of the environment, before the
     number. For example, `Theorem'.

NUMBERED_LIKE
     (Optional.)  The name of an already defined theorem-like
     environment; the new environment will be numbered just like
     NUMBERED_LIKE.

WITHIN
     (Optional.)  The name of an already defined counter, a sectional
     unit.  The new theorem counter will be reset at the same time as
     the WITHIN counter.


   At most one of NUMBERED_LIKE and WITHIN can be specified, not both.

10.7 `\newfont'
===============

Synopsis:

     \newfont{CMD}{FONTNAME}

   Defines a control sequence `\CMD', which must not already be
defined, to make FONTNAME be the current font.  The file looked for on
the system is named `FONTNAME.tfm'.

   This is a low-level command for setting up to use an individual font.
More commonly, fonts are defined in families through `.fd' files.

10.8 `\protect'
===============

Footnotes, line breaks, any command that has an optional argument, and
many more are so-called "fragile" commands.  When a fragile command is
used in certain contexts, called "moving arguments", it must be
preceded by `\protect'.  In addition, any fragile commands within the
arguments must have their own `\protect'.

   Some examples of moving arguments are `\caption' (*note figure::),
`\thanks' (*note \maketitle::), and expressions in `tabular' and
`array' environments (*note tabular::).

   Commands which are not fragile are called "robust".  They must not
be preceded by `\protect'.

   See also:

`http://www-h.eng.cam.ac.uk/help/tpl/textprocessing/teTeX/latex/latex2e-html/fragile.html'
`http://www.tex.ac.uk/cgi-bin/texfaq2html?label=protect'


11 Counters
***********

Everything LaTeX numbers for you has a counter associated with it. The
name of the counter is the same as the name of the environment or
command that produces the number, except with no `\'.
(`enumi'-`enumiv' are used for the nested enumerate environment.)
Below is a list of the counters used in LaTeX's standard document
classes to control numbering.

     part            paragraph       figure          enumi
     chapter         subparagraph    table           enumii
     section         page            footnote        enumiii
     subsection      equation        mpfootnote      enumiv
     subsubsection

11.1 `\alph \Alph \arabic \roman \Roman \fnsymbol': Printing counters
=====================================================================

All of these commands take a single counter as an argument, for
instance, `\alph{enumi}'.

`\alph'
     prints COUNTER using lowercase letters: `a', `b', ....

`\Alph'
     uses uppercase letters: `A', `B', ....

`\arabic'
     uses Arabic numbers: `1', `2', ....

`\roman'
     uses lowercase roman numerals: `i', `ii', ....

`\roman'
     uses uppercase roman numerals: `I', `II', ....

`\fnsymbol'
     prints the value of COUNTER in a specific sequence of nine symbols
     (conventionally used for labeling footnotes).  The value of
     COUNTER must be between 1 and 9, inclusive.

     The symbols mostly aren't supported in Info, but here are the
     names:
          asterix(*) dagger ddagger section-sign paragraph-sign parallel
          double-asterix(**) double-dagger double-ddagger


11.2 `\usecounter{COUNTER}'
===========================

Synopsis:

     \usecounter{COUNTER}

   The `\usecounter' command is used in the second argument of the
`list' environment to specify COUNTER to be used to number the list
items.

11.3 `\value{COUNTER}'
======================

Synopsis:

     \value{COUNTER}

   The `\value' command produces the value of COUNTER.  It can be used
anywhere LaTeX expects a number, for example:

     \setcounter{myctr}{3}
     \addtocounter{myctr}{1}
     \hspace{\value{myctr}\parindent}

11.4 `\setcounter{COUNTER}{VALUE}'
==================================

Synopsis:

     \setcounter{\COUNTER}{VALUE}

   The `\setcounter' command sets the value of \COUNTER to the VALUE
argument.

11.5 `\addtocounter{COUNTER}{VALUE}'
====================================

The `\addtocounter' command increments COUNTER by the amount specified
by the VALUE argument, which may be negative.

11.6 `\refstepcounter{COUNTER}'
===============================

The `\refstepcounter' command works in the same way as `\stepcounter'
*Note \stepcounter::, except it also defines the current `\ref' value
to be the result of `\thecounter'.

11.7 `\stepcounter{COUNTER}'
============================

The `\stepcounter' command adds one to COUNTER and resets all
subsidiary counters.

11.8 `\day \month \year': Predefined counters
=============================================

LaTeX defines counters for the day of the month (`\day', 1-31), month
of the year (`\month', 1-12), and year (`\year', Common Era).  When TeX
starts up, they are set to the current values on the system where TeX
is running.  They are not updated as the job progresses.

   The related command `\today' produces a string representing the
current day (*note \today::).

12 Lengths
**********

A `length' is a measure of distance.  Many LaTeX commands take a length
as an argument.

12.1 `\setlength{\LEN}{VALUE}'
==============================

The `\setlength' sets the value of \LEN to the VALUE argument, which
can be expressed in any units that LaTeX understands, i.e., inches
(`in'), millimeters (`mm'), points (`pt'), big points (`bp', etc.

12.2 \addtolength{\LEN}{AMOUNT}
===============================

The `\addtolength' command increments a "length command" \LEN by the
amount specified in the AMOUNT argument, which may be negative.

12.3 `\settodepth'
==================

`\settodepth{\gnat}{text}'

   The `\settodepth' command sets the value of a `length' command equal
to the depth of the `text' argument.

12.4 `\settoheight'
===================

`\settoheight{\gnat}{text}'

   The `\settoheight' command sets the value of a `length' command
equal to the height of the `text' argument.

12.5 `\settowidth{\LEN}{TEXT}'
==============================

The `\settowidth' command sets the value of the command \LEN to the
width of the TEXT argument.

12.6 Predefined lengths
=======================

`\width' 

   `\height' 

   `\depth' 

   `\totalheight' 

   These length parameters can be used in the arguments of the
box-making commands (*note Boxes::). They specify the natural width
etc. of the text in the box. `\totalheight' equals `\height' +
`\depth'. To make a box with the text stretched to double the natural
size, e.g., say

   `\makebox[2\width]{Get a stretcher}'

13 Line breaking
****************

The first thing LaTeX does when processing ordinary text is to
translate your input file into a sequence of glyphs and spaces.  To
produce a printed document, this sequence must be broken into lines
(and these lines must be broken into pages).

   LaTeX usually does the line (and page) breaking for you, but in some
environments, you do the line breaking yourself with the `\\' command,
and you can always manually force breaks.

13.1 `\\'[*][MORESPACE]
=======================

The `\\' command tells LaTeX to start a new line.  It has an optional
argument, MORESPACE, that specifies how much extra vertical space is to
be inserted before the next line.  This can be a negative amount.

   The `\\*' command is the same as the ordinary `\\' command except
that it tells LaTeX not to start a new page after the line.

13.2 `\obeycr' & `\restorecr'
=============================

The `\obeycr' command makes a return in the input file (`^^M',
internally) the same as `\\' (followed by `\relax').  So each new line
in the input will also be a new line in the output.

   `\restorecr' restores normal line-breaking behavior.

13.3 `\newline'
===============

The `\newline' command breaks the line at the present point, with no
stretching of the text before it.  It can only be used in paragraph
mode.

13.4 `\-' (discretionary hyphen)
================================

The `\-' command tells LaTeX that it may hyphenate the word at that
point.  LaTeX is very good at hyphenating, and it will usually find
most of the correct hyphenation points, and almost never use an
incorrect one.  The `\-' command is used for the exceptional cases.

   When you insert `\-' commands in a word, the word will only be
hyphenated at those points and not at any of the hyphenation points
that LaTeX might otherwise have chosen.

13.5 `\fussy'
=============

The declaration `\fussy' (which is the default) makes TeX picky about
line breaking.  This usually avoids too much space between words, at
the cost of an occasional overfull box.

   This command cancels the effect of a previous `\sloppy' command
(*note \sloppy::.

13.6 `\sloppy'
==============

The declaration `\sloppy' makes TeX less fussy about line breaking.
This will avoid overfull boxes, at the cost of loose interword spacing.

   Lasts until a `\fussy' command is issued (*note \fussy::).

13.7 `\hyphenation'
===================

Synopsis:

     \hyphenation{WORD-ONE WORD-TWO}

   The `\hyphenation' command declares allowed hyphenation points with
a `-' character in the given words.  The words are separated by spaces.
TeX will only hyphenate if the word matches exactly, no inflections
are tried.  Multiple `\hyphenation' commands accumulate.  Some examples
(the default TeX hyphenation patterns misses the hyphenations in these
words):

     \hyphenation{ap-pen-dix col-umns data-base data-bases}

13.8 `\linebreak' & `\nolinebreak'
==================================

Synopses:

     \linebreak[PRIORITY]
     \nolinebreak[PRIORITY]

   By default, the `\linebreak' (`\nolinebreak') command forces
(prevents) a line break at the current position.  For `\linebreak', the
spaces in the line are stretched out so that it extends to the right
margin as usual.

   With the optional argument PRIORITY, you can convert the command
from a demand to a request.  The PRIORITY must be a number from 0 to 4.
The higher the number, the more insistent the request.

14 Page breaking
****************

LaTeX starts new pages asynchronously, when enough material has
accumulated to fill up a page.  Usually this happens automatically, but
sometimes you may want to influence the breaks.

14.1 `\cleardoublepage'
=======================

The `\cleardoublepage' command ends the current page and causes all
figures and tables that have so far appeared in the input to be printed.
In a two-sided printing style, it also makes the next page a right-hand
(odd-numbered) page, producing a blank page if necessary.

14.2 `\clearpage'
=================

The `\clearpage' command ends the current page and causes all figures
and tables that have so far appeared in the input to be printed.

14.3 `\newpage'
===============

The `\newpage' command ends the current page, but does not clear floats
(see `\clearpage' above).

14.4 `\enlargethispage'
=======================

`\enlargethispage{size}'

   `\enlargethispage*{size}'

   Enlarge the `\textheight' for the current page by the specified
amount; e.g. `\enlargethispage{\baselineskip}' will allow one
additional line.

   The starred form tries to squeeze the material together on the page
as much as possible. This is normally used together with an explicit
`\pagebreak'.

14.5 `\pagebreak' & `\nopagebreak'
==================================

Synopses:

     \pagebreak[PRIORITY]
     \nopagebreak[PRIORITY]

   By default, the `\pagebreak' (`\nopagebreak') command forces
(prevents) a page break at the current position.  For `\linebreak', the
vertical space on the page is stretched out where possible so that it
extends to the normal bottom margin.

   With the optional argument PRIORITY, you can convert the
`\pagebreak' command from a demand to a request.  The number must be a
number from 0 to 4.  The higher the number, the more insistent the
request is.

15 Making paragraphs
********************

A paragraph is ended by one or more completely blank lines--lines not
containing even a `%'.  A blank line should not appear where a new
paragraph cannot be started, such as in math mode or in the argument of
a sectioning command.

15.1 `\indent'
==============

`\indent' produces a horizontal space whose width equals the width of
the `\parindent' length, the normal paragraph indentation.  It is used
to add paragraph indentation where it would otherwise be suppressed.

   The default value for `\parindent' is `1em' in two-column mode,
otherwise `15pt' for `10pt' documents, `17pt' for `11pt', and `1.5em'
for `12pt'.

15.2 `\noindent'
================

When used at the beginning of the paragraph, `\noindent' suppresses any
paragraph indentation.  It has no effect when used in the middle of a
paragraph.

15.3 `\parskip'
===============

`\parskip' is a rubber length defining extra vertical space added
before each paragraph.  The default is `0pt plus1pt'.

15.4 Marginal notes
===================

Synopsis:

     \marginpar[LEFT]{RIGHT}

   The `\marginpar' command creates a note in the margin.  The first
line of the note will have the same baseline as the line in the text
where the `\marginpar' occurs.

   When you only specify the mandatory argument RIGHT, the text will be
placed

   * in the right margin for one-sided layout;

   * in the outside margin for two-sided layout;

   * in the nearest margin for two-column layout.

   The command `\reversemarginpar' places subsequent marginal notes in
the opposite (inside) margin.  `\normalmarginpar' places them in the
default position.

   When you specify both arguments, LEFT is used for the left margin,
and RIGHT is used for the right margin.

   The first word will normally not be hyphenated; you can enable
hyphenation there by beginning the node with `\hspace{0pt}'.

   These parameters affect the formatting of the note:

`\marginparpush'
     Minimum vertical space between notes; default `7pt' for `12pt'
     documents, `5pt' else.

`\marginparsep'
     Horizontal space between the main text and the note; default
     `11pt' for `10pt' documents, `10pt' else.

`\marginparwidth'
     Width of the note itself; default for a one-sided `10pt' document
     is `90pt', `83pt' for `11pt', and `68pt' for `12pt'; `17pt' more
     in each case for a two-sided document.  In two column mode, the
     default is `48pt'.


16 Math formulas
****************

There are three environments that put LaTeX in math mode:

`math'
     For formulas that appear right in the text.

`displaymath'
     For formulas that appear on their own line.

`equation'
     The same as the displaymath environment except that it adds an
     equation number in the right margin.

   The `math' environment can be used in both paragraph and LR mode,
but the `displaymath' and `equation' environments can be used only in
paragraph mode.  The `math' and `displaymath' environments are used so
often that they have the following short forms:

     \(...\)   instead of   \begin{math}...\end{math}
     \[...\]   instead of   \begin{displaymath}...\end{displaymath}

   In fact, the `math' environment is so common that it has an even
shorter form:

     $ ... $   instead of   \(...\)

   The `\boldmath' command changes math letters and symbols to be in a
bold font.  It is used _outside_ of math mode.  Conversely, the
`\unboldmath' command changes math glyphs to be in a normal font; it
too is used _outside_ of math mode.

   The `\displaystyle' declaration forces the size and style of the
formula to be that of `displaymath', e.g., with limits above and below
summations.  For example
     $\displaystyle \sum_{n=0}^\infty x_n $

16.1 Subscripts & Superscripts
==============================

To get an expression exp to appear as a subscript, you just type
`_{'exp`}'.  To get exp to appear as a superscript, you type
`^{'exp`}'. LaTeX handles superscripted superscripts and all of that
stuff in the natural way.  It even does the right thing when something
has both a subscript and a superscript.

16.2 Math symbols
=================

LaTeX provides almost any mathematical symbol you're likely to need.
The commands for generating them can be used only in math mode.  For
example, if you include `$\pi$' in your source, you will get the pi
symbol (\pi) in your output.

`\|'
     \|

`\aleph'
     \aleph

`\alpha'
     \alpha

`\amalg'
     \amalg (binary operation)

`\angle'
     \angle

`\approx'
     \approx (relation)

`\ast'
     \ast (binary operation)

`\asymp'
     \asymp (relation)

`\backslash'
     \ (delimiter)

`\beta'
     \beta

`\bigcap'
     \bigcap

`\bigcirc'
     \bigcirc (binary operation)

`\bigcup'
     \bigcup

`\bigodot'
     \bigodot

`\bigoplus'
     \bigoplus

`\bigotimes'
     \bigotimes

`\bigtriangledown'
     \bigtriangledown (binary operation)

`\bigtriangleup'
     \bigtriangleup (binary operation)

`\bigsqcup'
     \bigsqcup

`\biguplus'
     \biguplus

`\bigcap'
     \bigvee

`\bigwedge'
     \bigwedge

`\bot'
     \bot

`\bowtie'
     \bowtie (relation)

`\Box'
     (square open box symbol)

`\bullet'
     \bullet (binary operation)

`\cap'
     \cap (binary operation)

`\cdot'
     \cdot (binary operation)

`\chi'
     \chi

`\circ'
     \circ (binary operation)

`\clubsuit'
     \clubsuit

`\cong'
     \cong (relation)

`\coprod'
     \coprod

`\cup'
     \cup (binary operation)

`\dagger'
     \dagger (binary operation)

`\dashv'
     \dashv (relation)

`\ddagger'
     \dagger (binary operation)

`\Delta'
     \Delta

`\delta'
     \delta

`\Diamond'
     bigger \diamond

`\diamond'
     \diamond (binary operation)

`\diamondsuit'
     \diamondsuit

`\div'
     \div (binary operation)

`\doteq'
     \doteq (relation)

`\downarrow'
     \downarrow (delimiter)

`\Downarrow'
     \Downarrow (delimiter)

`\ell'
     \ell

`\emptyset'
     \emptyset

`\epsilon'
     \epsilon

`\equiv'
     \equiv (relation)

`\eta'
     \eta

`\exists'
     \exists

`\flat'
     \flat

`\forall'
     \forall

`\frown'
     \frown (relation)

`\Gamma'
     \Gamma

`\gamma'
     \gamma

`\ge'
     \ge

`\geq'
     \geq (relation)

`\gets'
     \gets

`\gg'
     \gg (relation)

`\hbar'
     \hbar

`\heartsuit'
     \heartsuit

`\hookleftarrow'
     \hookleftarrow

`\hookrightarrow'
     \hookrightarrow

`\iff'
     \iff

`\Im'
     \Im

`\in'
     \in (relation)

`\infty'
     \infty

`\int'
     \int

`\iota'
     \iota

`\Join'
     condensed bowtie symbol (relation)

`\kappa'
     \kappa

`\Lambda'
     \Lambda

`\lambda'
     \lambda

`\land'
     \land

`\langle'
     \langle (delimiter)

`\lbrace'
     \lbrace (delimiter)

`\lbrack'
     \lbrack (delimiter)

`\lceil'
     \lceil (delimiter)

`\le'
     \le

`\leadsto'

`\Leftarrow'
     \Leftarrow

`\leftarrow'
     \leftarrow

`\leftharpoondown'
     \leftharpoondown

`\leftharpoonup'
     \leftharpoonup

`\Leftrightarrow'
     \Leftrightarrow

`\leftrightarrow'
     \leftrightarrow

`\leq'
     \leq (relation)

`\lfloor'
     \lfloor (delimiter)

`\lhd'
     (left-pointing arrow head)

`\ll'
     \ll (relation)

`\lnot'
     \lnot

`\longleftarrow'
     \longleftarrow

`\longleftrightarrow'
     \longleftrightarrow

`\longmapsto'
     \longmapsto

`\longrightarrow'
     \longrightarrow

`\lor'
     \lor

`\mapsto'
     \mapsto

`\mho'

`\mid'
     \mid (relation)

`\models'
     \models (relation)

`\mp'
     \mp (binary operation)

`\mu'
     \mu

`\nabla'
     \nabla

`\natural'
     \natural

`\ne'
     \ne

`\nearrow'
     \nearrow

`\neg'
     \neg

`\neq'
     \neq (relation)

`\ni'
     \ni (relation)

`\not'
     Overstrike a following operator with a /, as in \not=.

`\notin'
     \ni

`\nu'
     \nu

`\nwarrow'
     \nwarrow

`\odot'
     \odot (binary operation)

`\oint'
     \oint

`\Omega'
     \Omega

`\omega'
     \omega

`\ominus'
     \ominus (binary operation)

`\oplus'
     \oplus (binary operation)

`\oslash'
     \oslash (binary operation)

`\otimes'
     \otimes (binary operation)

`\owns'
     \owns

`\parallel'
     \parallel (relation)

`\partial'
     \partial

`\perp'
     \perp (relation)

`\phi'
     \phi

`\Pi'
     \Pi

`\pi'
     \pi

`\pm'
     \pm (binary operation)

`\prec'
     \prec (relation)

`\preceq'
     \preceq (relation)

`\prime'
     \prime

`\prod'
     \prod

`\propto'
     \propto (relation)

`\Psi'
     \Psi

`\psi'
     \psi

`\rangle'
     \rangle (delimiter)

`\rbrace'
     \rbrace (delimiter)

`\rbrack'
     \rbrack (delimiter)

`\rceil'
     \rceil (delimiter)

`\Re'
     \Re

`\rfloor'
     \rfloor

`\rhd'
     (binary operation)

`\rho'
     \rho

`\Rightarrow'
     \Rightarrow

`\rightarrow'
     \rightarrow

`\rightharpoondown'
     \rightharpoondown

`\rightharpoonup'
     \rightharpoonup

`\rightleftharpoons'
     \rightleftharpoons

`\searrow'
     \searrow

`\setminus'
     \setminus (binary operation)

`\sharp'
     \sharp

`\Sigma'
     \Sigma

`\sigma'
     \sigma

`\sim'
     \sim (relation)

`\simeq'
     \simeq (relation)

`\smallint'
     \smallint

`\smile'
     \smile (relation)

`\spadesuit'
     \spadesuit

`\sqcap'
     \sqcap (binary operation)

`\sqcup'
     \sqcup (binary operation)

`\sqsubset'
     (relation)

`\sqsubseteq'
     \sqsubseteq (relation)

`\sqsupset'
     (relation)

`\sqsupseteq'
     \sqsupseteq (relation)

`\star'
     \star (binary operation)

`\subset'
     \subset (relation)

`\subseteq'
     \subseteq (relation)

`\succ'
     \succ (relation)

`\succeq'
     \succeq (relation)

`\sum'
     \sum

`\supset'
     \supset (relation)

`\supseteq'
     \supseteq (relation)

`\surd'
     \surd

`\swarrow'
     \swarrow

`\tau'
     \tau

`\theta'
     \theta

`\times'
     \times (binary operation)

`\to'
     \to

`\top'
     \top

`\triangle'
     \triangle

`\triangleleft'
     \triangleleft (binary operation)

`\triangleright'
     \triangleright (binary operation)

`\unlhd'
     left-pointing arrowhead with line under (binary operation)

`\unrhd'
     right-pointing arrowhead with line under (binary operation)

`\Uparrow'
     \Uparrow (delimiter)

`\uparrow'
     \uparrow (delimiter)

`\Updownarrow'
     \Updownarrow (delimiter)

`\updownarrow'
     \updownarrow (delimiter)

`\uplus'
     \uplus (binary operation)

`\Upsilon'
     \Upsilon

`\upsilon'
     \upsilon

`\varepsilon'
     \varepsilon

`\varphi'
     \varphi

`\varpi'
     \varpi

`\varrho'
     \varrho

`\varsigma'
     \varsigma

`\vartheta'
     \vartheta

`\vdash'
     \vdash (relation)

`\vee'
     \vee (binary operation)

`\Vert'
     \Vert (delimiter)

`\vert'
     \vert (delimiter)

`\wedge'
     \wedge (binary operation)

`\wp'
     \wp

`\wr'
     \wr (binary operation)

`\Xi'
     \Xi

`\xi'
     \xi

`\zeta'
     \zeta


16.3 Math functions
===================

These commands produce roman function names in math mode with proper
spacing.

`\arccos'
     \arccos

`\arcsin'
     \arcsin

`\arctan'
     \arctan

`\arg'
     \arg

`\bmod'
     Binary modulo operator (x \bmod y)

`\cos'
     \cos

`\cosh'
     \cosh

`\cot'
     \cos

`\coth'
     \cosh

`\csc'
     \csc

`\deg'
     \deg

`\det'
     \deg

`\dim'
     \dim

`\exp'
     \exp

`\gcd'
     \gcd

`\hom'
     \hom

`\inf'
     \inf

`\ker'
     \ker

`\lg'
     \lg

`\lim'
     \lim

`\liminf'
     \liminf

`\limsup'
     \limsup

`\ln'
     \ln

`\log'
     \log

`\max'
     \max

`\min'
     \min

`\pmod'
     parenthesized modulus, as in (\pmod 2^n - 1)

`\Pr'
     \Pr

`\sec'
     \sec

`\sin'
     \sin

`\sinh'
     \sinh

`\sup'
     \sup

`\tan'
     \tan

`\tanh'
     \tanh


16.4 Math accents
=================

LaTeX provides a variety of commands for producing accented letters in
math.  These are different from accents in normal text (*note
Accents::).

`\acute'
     Math acute accent: \acutex.

`\breve'
     Math breve accent: \brevex.

`\check'
     Math ha'c<ek (check) accent: \checkx.

`\ddot'
     Math dieresis accent: \ddotx.

`\dot'
     Math dot accent: \dotx.

`\grave'
     Math grave accent: \gravex.

`\hat'
     Math hat (circumflex) accent: \hatx.

`\imath'
     Math dotless i.

`\jmath'
     Math dotless j.

`\tilde'
     Math tilde accent: \tildex.

`\vec'
     Math vector symbol: \vecx.

`\widehat'
     Math wide hat accent: \widehatx+y.

`\widehat'
     Math wide tilde accent: \widetildex+y.


16.5 Spacing in math mode
=========================

In a `math' environment, LaTeX ignores the spaces you type and puts in
the spacing according to the normal rules for mathematics texts.  If
you want different spacing, LaTeX provides the following commands for
use in math mode:

`\;'
     A thick space (5\over18\,quad).

`\:'
`\>'
     Both of these produce a medium space (2\over9\,quad).

`\,'
     A thin space (1\over6\,quad); not restricted to math mode.

`\!'
     A negative thin space (-1\over6\,quad).

16.6 Math Miscellany
====================

`\*'
     A "discretionary" multiplication symbol, at which a line break is
     allowed.

`\cdots'
     A horizontal ellipsis with the dots raised to the center of the
     line.

`\ddots'
     A diagonal ellipsis: \ddots.

`\frac{num}{den}'
     Produces the fraction `num' divided by `den'.

`\left DELIM1 ... \right DELIM2'
     The two delimiters need not match; `.' acts as a null delimiter,
     producing no output.  The delimiters are sized according to the
     math in between.  Example: `\left( \sum_i=1^10 a_i \right]'.

`\overbrace{TEXT}'
     Generates a brace over TEXT.  For example, \overbracex+\cdots+x^k
     \rm\;times.

`\overline{TEXT}'
     Generates a horizontal line over TEX.  For exampe, \overlinex+y.

`\sqrt[ROOT]{arg}'
     Produces the representation of the square root of ARG.  The
     optional argument ROOT determines what root to produce.  For
     example, the cube root of `x+y' would be typed as
     `$\sqrt[3]{x+y}$'.

`\stackrel{TEXT}{RELATION}'
     Puts TEXT above RELATION.  For example,
     `\stackrel{f}{\longrightarrow}'.

`\underbrace{math}'
     Generates MATH with a brace underneath.

`\underline{text}'
     Causes TEXT, which may be either math mode or not, to be
     underlined.

`\vdots'
     Produces a vertical ellipsis.


17 Modes
********

When LaTeX is processing your input text, it is always in one of three
modes:

   * Paragraph mode

   * Math mode

   * Left-to-right mode, called LR mode for short

   LaTeX changes mode only when it goes up or down a staircase to a
different level, though not all level changes produce mode changes.
Mode changes occur only when entering or leaving an environment, or when
LaTeX is processing the argument of certain text-producing commands.

   "Paragraph mode" is the most common; it's the one LaTeX is in when
processing ordinary text.  In that mode, LaTeX breaks your text into
lines and breaks the lines into pages.  LaTeX is in "math mode" when
it's generating a mathematical formula.  In "LR mode", as in paragraph
mode, LaTeX considers the output that it produces to be a string of
words with spaces between them.  However, unlike paragraph mode, LaTeX
keeps going from left to right; it never starts a new line in LR mode.
Even if you put a hundred words into an `\mbox', LaTeX would keep
typesetting them from left to right inside a single box, and then
complain because the resulting box was too wide to fit on the line.

   LaTeX is in LR mode when it starts making a box with an `\mbox'
command.  You can get it to enter a different mode inside the box - for
example, you can make it enter math mode to put a formula in the box.
There are also several text-producing commands and environments for
making a box that put LaTeX in paragraph mode.  The box make by one of
these commands or environments will be called a `parbox'.  When LaTeX
is in paragraph mode while making a box, it is said to be in "inner
paragraph mode".  Its normal paragraph mode, which it starts out in, is
called "outer paragraph mode".

18 Page Styles
**************

The `\documentclass' command determines the size and position of the
page's head and foot.  The page style determines what goes in them.

18.1 `\maketitle'
=================

The `\maketitle' command generates a title on a separate title
page--except in the `article' class, where the title is placed at the
top of the first page.  Information used to produce the title is
obtained from the following declarations:

`\author{NAME \and NAME2}'
     The `\author' command declares the document author(s), where the
     argument is a list of authors separated by `\and' commands.  Use
     `\\' to separate lines within a single author's entry--for
     example, to give the author's institution or address.

`\date{TEXT}'
     The `\date' command declares TEXT to be the document's date.  With
     no `\date' command, the current date (*note \today::) is used.

`\thanks{TEXT}'
     The `\thanks' command produces a `\footnote' to the title, usually
     used for credit acknowledgements.

`\title{TEXT}'
     The `\title' command declares TEXT to be the title of the
     document.  Use `\\' to force a line break, as usual.


18.2 `\pagenumbering'
=====================

Synopsis:

     \pagenumbering{STYLE}

   Specifies the style of page numbers, according to STYLE:

`arabic'
     arabic numerals

`roman'
     lowercase Roman numerals

`Roman'
     uppercase Roman numerals

`alph'
     lowercase letters

`Alph'
     uppercase letters

18.3 `\pagestyle'
=================

Synopsis:

     \pagestyle{STYLE}

   The `\pagestyle' command specifies how the headers and footers are
typeset from the current page onwards.  Values for STYLE:

`plain'
     Just a plain page number.

`empty'
     Empty headers and footers, e.g., no page numbers.

`headings'
     Put running headers on each page.  The document style specifies
     what goes in the headers.

`myheadings'
     Custom headers, specified via the `\markboth' or the `\markright'
     commands.


   Here are the descriptions of `\markboth' and `\markright':

`\markboth{LEFT}{RIGHT}'
     Sets both the left and the right heading.  A "left-hand heading"
     (LEFT) is generated by the last `\markboth' command before the end
     of the page, while a "right-hand heading" (RIGHT is generated by
     the first `\markboth' or `\markright' that comes on the page if
     there is one, otherwise by the last one before the page.

`\markright{RIGHT}'
     Sets the right heading, leaving the left heading unchanged.


18.4 `\thispagestyle{STYLE}'
============================

The `\thispagestyle' command works in the same manner as the
`\pagestyle' command (see previous section) except that it changes to
STYLE for the current page only.

19 Spaces
*********

LaTeX has many ways to produce white (or filled) space.

   Another space-producing command is `\,' to produce a "thin" space
(usually 1/6quad).  It can be used in text mode, but is more often
useful in math mode  (*note Spacing in math mode::).

19.1 `\hspace'
==============

Synopsis:

     \hspace[*]{LENGTH}

   The `\hspace' command adds horizontal space.  The LENGTH argument
can be expressed in any terms that LaTeX understands: points, inches,
etc.  It is a rubber length.  You can add both negative and positive
space with an `\hspace' command; adding negative space is like
backspacing.

   LaTeX normally removes horizontal space that comes at the beginning
or end of a line.  To preserve this space, use the optional `*' form.

19.2 `\hfill'
=============

The `\hfill' fill command produces a "rubber length" which has no
natural space but can stretch or shrink horizontally as far as needed.

   The `\fill' parameter is the rubber length itself (technically, the
glue value `0pt plus1fill'); thus, `\hspace\fill' is equivalent to
`\hfill'.

19.3 `\SPACE'
=============

The `\ ' (space) command produces a normal interword space.  It's
useful after punctuation which shouldn't end a sentence.  For example
`Knuth's article in Proc.\ Amer.\ Math\. Soc.\ is fundamental'.  It is
also often used after control sequences, as in `\TeX\ is a nice system.'

   In normal circumstances, `\'<tab> and `\'<newline> are equivalent to
`\ '.

19.4 `\@'
=========

The `\@' command makes the following punctuation character end a
sentence even if it normally would not.  This is typically used after a
capital letter.  Here are side-by-side examples with and without `\@':

     ... in C\@.  Pascal, though ...
     ... in C.  Pascal, though ...

produces

     ... in C.  Pascal, though ...  ... in C.  Pascal, though ...

19.5 `\thinspace'
=================

`\thinspace' produces an unbreakable and unstretchable space that is
1/6 of an em.  This is the proper space to use in nested quotes, as in
'".

19.6 `\/'
=========

The `\/' command produces an "italic correction".  This is a small
space defined by the font designer for a given character, to avoid the
character colliding with whatever follows.  The italic f character
typically has a large italic correction value.

   If the following character is a period or comma, it's not necessary
to insert an italic correction, since those punctuation symbols have a
very small height.  However, with semicolons or colons, as well as
normal letters, it can help. Compare f: f; (in the TeX output, the `f's
are nicely separated) with f: f;.

   Despite the name, roman characters can also have an italic
correction.  Compare pdfTeX (in the TeX output, there is a small space
after the `f') with pdfTeX.

19.7 `\hrulefill'
=================

The `\hrulefill' fill command produces a "rubber length" which can
stretch or shrink horizontally.  It will be filled with a horizontal
rule.

19.8 `\dotfill'
===============

The `\dotfill' command produces a "rubber length" that fills with dots
instead of just white space.

19.9 `\addvspace'
=================

`\addvspace{length}'

   The `\addvspace' command normally adds a vertical space of height
length.  However, if vertical space has already been added to the same
point in the output by a previous `\addvspace' command, then this
command will not add more space than needed to make the natural length
of the total vertical space equal to `length'.

19.10 `\bigskip \medskip \smallskip'
====================================

These commands produce a given amount of space.

`\bigskip'
     The same as `\vspace{bigskipamount}', ordinarily about one line
     space (with stretch and shrink).

`\medskip'
     The same as `\vspace{medskipamount}', ordinarily about half of a
     line space (with stretch and shrink).

`\smallskip'
     The same as `\vspace{smallskipamount}', ordinarily about a quarter
     of a line space (with stretch and shrink).


   The `\...amount' parameters are determined by the document class.

19.11 `\vfill'
==============

The `\vfill' fill command produces a rubber length (glue) which can
stretch or shrink vertically as far as needed.  It's equivalent to
`\vspace{\fill}' (*note \hfill::).

19.12 `\vspace[*]{LENGTH}'
==========================

Synopsis:

     \vspace[*]{LENGTH}

   The `\vspace' command adds the vertical space LENGTH, i.e., a rubber
length.  LENGTH can be negative or positive.

   Ordinarily, LaTeX removes vertical space added by `\vspace' at the
top or bottom of a page.  With the optional `*' argument, the space is
not removed.

20 Boxes
********

All the predefined length parameters (*note Predefined lengths::) can be
used in the arguments of the box-making commands.

20.1 `\mbox{TEXT}'
==================

The `\mbox' command creates a box just wide enough to hold the text
created by its argument.  The TEXT is not broken into lines, so it can
be used to prevent hyphenation.

20.2 `\fbox' and `\framebox'
============================

Synopses:

     \fbox{TEXT}
     \framebox[WIDTH][POSITION]{TEXT}

   The `\fbox' and `\framebox' commands are like `\mbox', except that
they put a frame around the outside of the box being created.

   In addition, the `\framebox' command allows for explicit
specification of the box width with the optional WIDTH argument (a
dimension), and positioning with the optional POSITION argument.  Both
commands produce a rule of thickness `\fboxrule' (default `.4pt'), and
leave a space of `\fboxsep' (default `3pt') between the rule and the
contents of the box.

   *Note \framebox (picture)::, for the `\framebox' command in the
`picture' environment.

20.3 `lrbox'
============

`\begin{lrbox}{cmd} text \end{lrbox}'

   This is the environment form of `\sbox'.

   The text inside the environment is saved in the box `cmd', which
must have been declared with `\newsavebox'.

20.4 `\makebox'
===============

Synopsis:

     \makebox[WIDTH][POSITION]{TEXT}

   The `\makebox' command creates a box just wide enough to contain the
TEXT specified.  The width of the box is specified by the optional
WIDTH argument.  The position of the text within the box is determined
by the optional POSITION argument, which may take the following values:

`c'
     Centered (default).

`l'
     Flush left.

`r'
     Flush right.

`s'
     Stretch (justify) across entire WIDTH; TEXT must contain
     stretchable space for this to work.

   `\makebox' is also used within the picture environment *note
\makebox (picture)::.

20.5 `\parbox'
==============

Synopsis:

     \parbox[POSITION][HEIGHT][INNER-POS]{WIDTH}{TEXT}

   The `\parbox' command produces a box whose contents are created in
`paragraph' mode.  It should be used to make a box small pieces of
text, with nothing fancy inside.  In particular, you shouldn't use any
paragraph-making environments inside a `\parbox' argument.  For larger
pieces of text, including ones containing a paragraph-making
environment, you should use a `minipage' environment (*note minipage::).

   `\parbox' has two mandatory arguments:

WIDTH
     the width of the parbox;

TEXT
     the text that goes inside the parbox.

   The optional POSITION argument allows you to align either the top or
bottom line in the parbox with the baseline of the surrounding text
(default is top).

   The optional HEIGHT argument overrides the natural height of the box.

   The INNER-POS argument controls the placement of the text inside the
box, as follows; if it is not specified, POSITION is used.

`t'
     text is placed at the top of the box.

`c'
     text is centered in the box.

`b'
     text is placed at the bottom of the box.

`s'
     stretch vertically; the text must contain vertically stretchable
     space for this to work.

20.6 `\raisebox'
================

Synopsis:

     \raisebox{distance}[HEIGHT][DEPTH]{text}

   The `\raisebox' command raises or lowers TEXT.  The first mandatory
argument specifies how high TEXT is to be raised (or lowered if it is a
negative amount).  TEXT itself is processed in LR mode.

   The optional arguments HEIGHT and DEPTH are dimensions.  If they are
specified, LaTeX treats TEXT as extending a certain distance above the
baseline (height) or below (depth), ignoring its natural height and
depth.

20.7 `\savebox'
===============

Synopsis:

     \savebox{\BOXCMD}[WIDTH][POS]{TEXT}

   This command typeset TEXT in a box just as with `\makebox' (*note
\makebox::), except that instead of printing the resulting box, it
saves it in the box labeled \BOXCMD, which must have been declared with
`\newsavebox' (*note \newsavebox::).

20.8 `\sbox{\BOXCMD}{TEXT}'
===========================

Synopsis:

     \sbox{\BOXCMD}{TEXT}

   `\sbox' types TEXT in a box just as with `\mbox' (*note \mbox::)
except that instead of the resulting box being included in the normal
output, it is saved in the box labeled \BOXCMD.  \BOXCMD must have been
previously declared with `\newsavebox' (*note \newsavebox::).

20.9 `\usebox{\BOXCMD'
======================

Synopsis:

     \usebox{\BOXCMD}

   `\usebox' producesthe box most recently saved in the bin \BOXCMD by
a `\savebox' command (*note \savebox::).

21 Special insertions
*********************

LaTeX provides commands for inserting characters that have a special
meaning do not correspond to simple characters you can type.

21.1 Reserved characters
========================

The following characters play a special role in LaTeX and are called
"reserved characters" or "special characters".

     # $ % & ~ _ ^ \ { }

   Whenever you write one of these characters into your file, LaTeX
will do something special.  If you simply want the character to be
printed as itself, include a `\' in front of the character.  For
example, `\$' will produce `$' in your output.

   One exception to this rule is `\' itself, because `\\' has its own
special (context-dependent) meaning.  A roman \ is produced by typing
`$\backslash$' in your file, and a typewriter `\' is produced by using
`\' in a verbatim command (*note verbatim::).

   Also, `\~' and `\^' place tilde and circumflex accents over the
following letter, as in o~ and o^ (*note Accents::); to get a
standalone `~' or `^', you can again use a verbatim command.

   Finally, you can access any character of the current font once you
know its number by using the `\symbol' command. For example, the
visible space character used in the `\verb*' command has the code
decimal 32, so it can be typed as `\symbol{32}'.

   You can also specify octal numbers with `'' or hexadecimal numbers
with `"', so the previous example could also be written as
`\symbol{'40}' or `\symbol{"20}'.

21.2 Text symbols
=================

LaTeX provides commands to generate a number of non-letter symbols in
running text.

`\copyright'
     The copyright symbol, (C).

`\dag'
     The dagger symbol (in text).

`\ddag'
     The double dagger symbol (in text).

`\LaTeX'
     The LaTeX logo.

`\ldots'
     An ellipsis (three dots at the baseline): `...'.  This command
     also works in math mode.

`\lq'
     Left (opening) quote: `.

`\P'
     Paragraph sign (pilcrow).

`\pounds'
     English pounds sterling.

`\rq'
     Right (closing) quote: '.

`\S'
     Section symbol.

`\TeX'
     The TeX logo.


21.3 Accents
============

LaTeX has wide support for many of the world's scripts and languages,
through the `babel' package and related support.  This section does not
attempt to cover all that support.  It merely the core LaTeX commands
for creating accented characters.

`\"'
     Produces an umlaut, as in o".

`\''
     Produces an acute accent, as in o'.  In the `tabbing' environment,
     pushes current column to the right of the previous column (*note
     tabbing::).

`\.'
     Produces a dot accent over the following, as in o..

`\='
     Produces a macron (overbar) accent over the following, as in o=.

`\^'
     Produces a circumflex (hat) accent over the following, as in o^.

`\`'
     Produces a grave accent over the following, as in o`.  In the
     `tabbing' environment, move following text to the right margin
     (*note tabbing::).

`\~'
     Produces a tilde accent over the following, as in n~.

`\b'
     Produces a bar accent under the following, as in o_.

`\bar'
     Produces a macron accent over the following, as in o=.

`\c'
     Produces a cedilla accent under the following, as in

`\d'
     Produces a dot accent under the following, as in .o.

`\H'
     Produces a long Hungarian umlaut accent over the following, as in
     o''.

`\i'
     Produces a dotless i, as in `i'.

`\j'
     Produces a dotless j, as in `j'.

`\t'
     Produces a tie-after accent, as in `oo['.

`\u'
     Produces a breve accent, as in `o('.

`\v'
     Produces a ha'c<ek (check) accent, as in `o<'.


21.4 Non-English characters
===========================

Here are the basic LaTeX commands for inserting characters commonly
used in languages other than English.

`\aa'
`\AA'
     aa and AA.

`\ae'
`\AE'
     ae and AE.

`\l'
`\L'
     /l and /L.

`\o'
`\O'
     /o and /O.

`\oe'
`\OE'
     oe and OE.

`\ss'
     ss.


21.5 `\rule'
============

Synopsis:

     \rule[RAISE]{WIDTH}{THICKNESS}

   The `\rule' command produces "rules", that is, lines or rectangles.
The arguments are:

RAISE
     How high to raise the rule (optional).

WIDTH
     The length of the rule (mandatory).

THICKNESS
     The thickness of the rule (mandatory).

21.6 `\today'
=============

The `\today' command produces today's date, in the format `MONTH DD,
YYYY'; for example, `July 4, 1976'.  It uses the predefined counters
`\day', `\month', and `\year' (*note \day \month \year::) to do this.
It is not updated as the program runs.

   The `datetime' package, among others, can produce a wide variety of
other date formats.

22 Splitting the input
**********************

A large document requires a lot of input.  Rather than putting the whole
input in a single large file, it's more efficient to split it into
several smaller ones.  Regardless of how many separate files you use,
there is one that is the root file; it is the one whose name you type
when you run LaTeX.

22.1 `\include'
===============

Synopsis:

     \include{FILE}

   If no `\includeonly' command is present, the `\include' command
executes `\clearpage' to start a new page (*note \clearpage::), then
reads FILE, then does another `\clearpage'.

   Given an `\includeonly' command, the `\include' actions are only run
if FILE is listed as an argument to `\includeonly'.  See the next
section.

   The `\include' command may not appear in the preamble or in a file
read by another `\include' command.

22.2 \`includeonly'
===================

Synopsis:

     \includeonly{FILE1,FILE2,...}

   The `\includeonly' command controls which files will be read by
subsequent `\include' commands.  The list of filenames is
comma-separated. Each FILE must exactly match a filename specified in a
`\include' command for the selection to be effective.

   This command can only appear in the preamble.

22.3 \input
===========

Synopsis:

     \input{FILE}

   The `\input' command causes the specified FILE to be read and
processed, as if its contents had been inserted in the current file at
that point.

   If FILE does not end in `.tex' (e.g., `foo' or `foo.bar'), it is
first tried with that extension (`foo.tex' or `foo.bar.tex').  If that
is not found, the original FILE is tried (`foo' or `foo.bar').

23 Front/back matter
********************

23.1 Tables of contents
=======================

A table of contents is produced with the `\tableofcontents' command.
You put the command right where you want the table of contents to go;
LaTeX does the rest for you.  A previous run must have generated a
`.toc' file.

   The `\tableofcontents' command produces a heading, but it does not
automatically start a new page.  If you want a new page after the table
of contents, write a `\newpage' command after the `\tableofcontents'
command.

   The analagous commands `\listoffigures' and `\listoftables' produce
a list of figures and a list of tables, respectively.  Everything works
exactly the same as for the table of contents.

   The command `\nofiles' overrides these commands, and _prevents_ any
of these lists from being generated.

23.1.1 \addcontentsline
-----------------------

The `\addcontentsline' command adds an entry to the specified list or
table where:

EXT
     The extension of the file on which information is to be written,
     typically one of: `toc' (table of contents), `lof' (list of
     figures), or `lot' (list of tables).

UNIT
     The name of the sectional unit being added, typically one of the
     following, matching the value of the EXT argument:

    `toc'
          The name of the sectional unit: `part', `chapter', `section',
          `subsection', `subsubsection'.

    `lof'
          For the list of figures.

    `lot'
          For the list of tables.

ENTRY
     The actual text of the entry.

   What is written to the `.EXT' file is the command
`\contentsline{UNIT}{NAME}'.

23.1.2 \addtocontents
---------------------

The `\addtocontents' command adds text (or formatting commands)
directly to the `.'EXT file that generates the table of contents or
lists of figures or tables.

EXT
     The extension of the file on which information is to be written:
     `toc' (table of contents), `lof' (list of figures), or `lot' (list
     of tables).

TEXT
     The text to be written.

23.2 Glossaries
===============

The command `\makeglossary' enables creating glossaries.

   The command `\glossary{TEXT}' writes a glossary entry for TEXT to an
auxiliary file with the `.glo' extension.

   Specifically, what gets written is the command
`\glossaryentry{TEXT}{PAGENO}', where PAGENO is the current `\thepage'
value.

   The `glossary' package on CTAN provides support for fancier
glossaries.

23.3 Indexes
============

The command `\makeindex' enables creating indexes.

   The command `\index{TEXT}' writes a glossary entry for TEXT to an
auxiliary file with the `.idx' extension.

   Specifically, what gets written is the command
`\indexentry{TEXT}{PAGENO}', where PAGENO is the current `\thepage'
value.

   The rubber length `\indexspace' is inserted before each new letter
in the index; its default value is `10pt plus5pt minus3pt'.

   The `.idx' file can then be sorted with an external command,
typically `makeindex' or `xindy', resulting in a `.ind' file, which can
then be used to typeset the index.

24 Letters
**********

You can use LaTeX to typeset letters, both personal and business.  The
`letter' document class is designed to make a number of letters at
once, although you can make just one if you so desire.

   Your `.tex' source file has the same minimum commands as the other
document classes, i.e., you must have the following commands as a
minimum:

      \documentclass{letter}
      \begin{document}
       ... letters ...
      \end{document}

   Each letter is a `letter' environment, whose argument is the name
and address of the recipient.  For example, you might have:

      \begin{letter}{Mr. Joe Smith\\ 2345 Princess St.
           \\ Edinburgh, EH1 1AA}
        ...
      \end{letter}

   The letter itself begins with the `\opening' command.  The text of
the letter follows.  It is typed as ordinary LaTeX input.  Commands that
make no sense in a letter, like `\chapter', do not work.  The letter
closes with a `\closing' command.

   After the `closing', you can have additional material.  The `\cc'
command produces the usual "cc: ...".  There's also a similar `\encl'
command for a list of enclosures. With both these commands, use `\\' to
separate the items.

   These commands are used with the `letter' class.

24.1 \address{RETURN-ADDRESS}
=============================

The `\address' specifies the return address of a letter, as it should
appear on the letter and the envelope.  Separate lines of the address
should be separated by `\\' commands.

   If you do not make an `\address' declaration, then the letter will
be formatted for copying onto your organisation's standard letterhead.
(*Note Overview::, for details on your local implementation).  If you
give an `\address' declaration, then the letter will be formatted as a
personal letter.

24.2 `\cc'
==========

Synopsis:

     \cc{NAME1\\NAME2}

   Produce a list of NAMEs the letter was copied to.  Each name is
printed on a separate line.

24.3 `\closing'
===============

Synopsis:

     \closing{text}

   A letter closes with a `\closing' command, for example,
     \closing{Best Regards,}

24.4 `\encl'
============

Synopsis:

     \encl{LINE1\\LINE2}

   Declare a list of one more enclosures.

24.5 `\location'
================

`\location{address}'

   This modifies your organisation's standard address.  This only
appears if the `firstpage' pagestyle is selected.

24.6 `\makelabels'
==================

`\makelabels{number}'

   If you issue this command in the preamble, LaTeX will create a sheet
of address labels. This sheet will be output before the letters.

24.7 `\name'
============

`\name{June Davenport}'

   Your name, used for printing on the envelope together with the return
address.

24.8 `\opening{TEXT}'
=====================

Synopsis:

     \opening{TEXT}

   A letter begins with the `\opening' command.  The mandatory
argument, TEXT, is whatever text you wish to start your letter.  For
instance:

     \opening{Dear Joe,}

24.9 `\ps'
==========

Use the `\ps' command to start a postscript in a letter, after
`\closing'.

24.10 `\signature{TEXT}'
========================

Your name, as it should appear at the end of the letter underneath the
space for your signature.  `\\' starts a new line within TEXT as usual.

24.11 `\startbreaks'
====================

`\startbreaks'

   Used after a `\stopbreaks' command to allow page breaks again.

24.12 `\stopbreaks'
===================

`\stopbreaks'

   Inhibit page breaks until a `\startbreaks' command occurs.

24.13 `\telephone'
==================

`\telephone{number}'

   This is your telephone number.  This only appears if the `firstpage'
pagestyle is selected.

25 Terminal Input/Output
************************

25.1 `\typein[CMD]{MSG}'
========================

Synopsis:

     \typein[\CMD]{MSG}

   `\typein' prints MSG on the terminal and causes LaTeX to stop and
wait for you to type a line of input, ending with return.  If the
optional \CMD argument is omitted, the typed input is processed as if
it had been included in the input file in place of the `\typein'
command.  If the \CMD argument is present, it must be a command name.
This command name is then defined or redefined to be the typed input.

25.2 `\typeout{MSG}'
====================

Synopsis:

     \typeout{MSG}

   Prints `msg' on the terminal and in the `log' file.  Commands in
`msg' that are defined with `\newcommand' or `\renewcommand' (among
others) are replaced by their definitions before being printed.

   LaTeX's usual rules for treating multiple spaces as a single space
and ignoring spaces after a command name apply to `msg'.  A `\space'
command in `msg' causes a single space to be printed, independent of
surrounding spaces.  A `^^J' in `msg' prints a newline.

26 Command Line
***************

The input file specification indicates the file to be formatted; TeX
uses `.tex' as a default file extension.  If you omit the input file
entirely, TeX accepts input from the terminal.  You specify command
options by supplying a string as a parameter to the command; e.g.

     latex '\nonstopmode\input foo.tex'

will process `foo.tex' without pausing after every error.

   If LaTeX stops in the middle of the document and gives you a `*'
prompt, it is waiting for input.  You can type `\stop' (and return) and
it will prematurely end the document.

Appendix A Document templates
*****************************

Although not reference material, perhaps these document templates will
be useful.

A.1 `book' template
===================


\documentclass{book}
\title{Book Class Template}
\author{Alex Author}

\begin{document}
\maketitle

\chapter{First}
Some text.

\chapter{Second}
Some other text.

\section{A subtopic}
The end.
\end{document}

A.2 `beamer' template
=====================

The `beamer' class creates slides presentations.


\documentclass{beamer}

\title{Beamer Class template}
\author{Alex Author}
\date{July 31, 2007}

\begin{document}

\maketitle

% without [fragile], any {verbatim} code gets mysterious errors.
\begin{frame}[fragile]
 \frametitle{First Slide}

\begin{verbatim}
  This is \verbatim!
\end{verbatim}

\end{frame}

\end{document}

A.3 `tugboat' template
======================

`TUGboat' is the journal of the TeX Users Group,
`http://tug.org/TUGboat'.


\documentclass{ltugboat}  % ltugproc for proceedings

\usepackage{graphicx}
\usepackage{ifpdf}
\ifpdf
  \usepackage[breaklinks,colorlinks,linkcolor=black,citecolor=black,
              urlcolor=black]{hyperref}
\else
  \usepackage{url}
\fi

\begin{document}

\title{Example \TUB\ Regular Article}

% repeat info for each author.
\author{First Last}
\address{Street Address \\ Town, Postal \\ Country}
\netaddress{user (at) example dot org}
\personalURL{http://example.org/~user/}

\maketitle

% The abstract comes after \maketitle in ltugboat.
\begin{abstract}
This is an example article for a regular \TUB{} issue.
\end{abstract}

\section{Introduction}

This is an example article for \TUB, from
\url{http://tug.org/TUGboat/location.html}.

We recommend the graphicx package for image inclusions, and the hyperref
package for active url's (in the \acro{PDF} output).  \TUB\ is produced
using \acro{PDF} files exclusively, nowadays.

The \texttt{ltug*} classes provide these abbreviations, among many others:

{\small
\begin{verbatim}
\AllTeX \AMS \AmS \AmSLaTeX \AmSTeX \aw \AW
\BibTeX \CandT \CTAN \DTD \DVItoVDU \HTML
\ISBN \ISSN \JTeX \JoT \LAMSTeX \LaTeXe
\Mc \mf \MFB \mtex \pcMF \PCTeX \pcTeX \Pas
\PiC \PiCTeX \plain \POBox \PS
\SC \SGML \SliTeX \TANGLE \TB \TP \TUB \TUG
\tug \UG \UNIX \VAX \VorTeX \XeT \WEB \WEAVE

\Dash \dash \vellipsis \bull \cents \Dag
\careof \thinskip

\acro{FRED} -> {\sc fred}  % please use!
\cs{fred}   -> \fred
\env{fred}  -> \begin{fred}
\meta{fred} -> <fred>
\nth{n}     -> 1st, 2nd, ...
\sfrac{3/4} -> 3/4
\booktitle{Book of Fred}
\end{verbatim}
}

For more information, see the ltubguid document at:
\url{http://mirror.ctan.org/macros/latex/contrib/tugboat}

Email \verb|tugboat@tug.org| if problems or questions.


\bibliographystyle{plain}  % we recommend the plain bibliography style
\nocite{book-minimal}      % just making the bibliography non-empty
\bibliography{xampl}       % xampl.bib comes with BibTeX


\makesignature  % not in ltugproc
\end{document}

Concept Index
*************

* prompt:                                      See 26.       (line 4738)
*-form of sectioning commands:                 See 6.        (line  788)
.glo file:                                     See 23.2.     (line 4515)
.idx file:                                     See 23.3.     (line 4530)
.ind file:                                     See 23.3.     (line 4540)
abstracts:                                     See 8.1.      (line  881)
accents:                                       See 21.3.     (line 4263)
accents, mathematical:                         See 16.4.     (line 3611)
accessing any character of a font:             See 21.1.     (line 4210)
acute accent:                                  See 21.3.     (line 4272)
acute accent, math:                            See 16.4.     (line 3616)
ae ligature:                                   See 21.4.     (line 4337)
aligning Equations:                            See 8.8.      (line 1065)
alignment via tabbing:                         See 8.21.     (line 1688)
appendix, creating:                            See 6.        (line  794)
aring:                                         See 21.4.     (line 4333)
arrays, math:                                  See 8.2.      (line  892)
author, for titlepage:                         See 18.1.     (line 3779)
bar-over accent:                               See 21.3.     (line 4280)
bar-under accent:                              See 21.3.     (line 4294)
bibliography, creating (automatically):        See 8.24.4.   (line 2035)
bibliography, creating (manually):             See 8.24.     (line 1970)
bibTeX, using:                                 See 8.24.4.   (line 2035)
black boxes, omitting:                         See 3.1.      (line  357)
bold font:                                     See 4.1.      (line  502)
bold typewriter, avoiding:                     See 8.4.      (line  988)
boxes:                                         See 20.       (line 4019)
breaking lines:                                See 13.       (line 2578)
breaking pages:                                See 14.       (line 2679)
breve accent:                                  See 21.3.     (line 4319)
breve accent, math:                            See 16.4.     (line 3619)
bullet symbol:                                 See 16.2.     (line 2946)
bulleted lists:                                See 8.13.     (line 1223)
calligraphic letters for math:                 See 4.1.      (line  505)
cc list, in letters:                           See 24.2.     (line 4596)
cedilla accent:                                See 21.3.     (line 4300)
centering text, declaration for:               See 8.3.1.    (line  953)
centering text, environment for:               See 8.3.      (line  939)
characters, accented:                          See 21.3.     (line 4263)
characters, non-English:                       See 21.4.     (line 4328)
characters, reserved:                          See 21.1.     (line 4191)
check accent:                                  See 21.3.     (line 4322)
check accent, math:                            See 16.4.     (line 3622)
circumflex accent:                             See 21.3.     (line 4283)
circumflex accent, math:                       See 16.4.     (line 3634)
class options:                                 See 3.1.      (line  336)
classes of documents:                          See 3.        (line  319)
closing letters:                               See 24.3.     (line 4606)
closing quote:                                 See 21.2.     (line 4251)
code, typesetting:                             See 8.27.     (line 2105)
command Line:                                  See 26.       (line 4729)
commands, defining new ones:                   See 10.1.     (line 2231)
computer programs, typesetting:                See 8.27.     (line 2105)
copyright symbol:                              See 21.2.     (line 4226)
counters, a list of:                           See 11.       (line 2405)
counters, defining new:                        See 10.2.     (line 2264)
counters, getting value of:                    See 11.3.     (line 2464)
counters, setting:                             See 11.4.     (line 2478)
creating letters:                              See 24.       (line 4547)
creating pictures:                             See 8.18.     (line 1404)
creating tables:                               See 8.22.     (line 1780)
credit footnote:                               See 18.1.     (line 3789)
cross references:                              See 7.        (line  807)
cross referencing with page number:            See 7.2.      (line  849)
cross referencing, symbolic:                   See 7.3.      (line  859)
dagger, in text:                               See 21.2.     (line 4229)
date, for titlepage:                           See 18.1.     (line 3785)
datetime package:                              See 21.6.     (line 4382)
defining a new command:                        See 10.1.     (line 2231)
defining new environments:                     See 10.5.     (line 2304)
defining new fonts:                            See 10.7.     (line 2369)
defining new theorems:                         See 10.6.     (line 2340)
definitions:                                   See 10.       (line 2226)
description lists, creating:                   See 8.4.      (line  976)
discretionary multiplication:                  See 16.6.     (line 3680)
displaying quoted text with paragraph indentation:See 8.19.  (line 1658)
displaying quoted text without paragraph indentation:See 8.20.
                                                             (line 1673)
document class options:                        See 3.1.      (line  336)
document classes:                              See 3.        (line  319)
document templates:                            See Appendix A.
                                                             (line 4745)
dot accent:                                    See 21.3.     (line 4277)
dot over accent, math:                         See 16.4.     (line 3628)
dot-over accent:                               See 21.3.     (line 4277)
dot-under accent:                              See 21.3.     (line 4303)
dotless i:                                     See 21.3.     (line 4310)
dotless i, math:                               See 16.4.     (line 3637)
dotless j:                                     See 21.3.     (line 4313)
dotless j, math:                               See 16.4.     (line 3640)
double dagger, in text:                        See 21.2.     (line 4232)
double dot accent, math:                       See 16.4.     (line 3625)
ellipsis:                                      See 21.2.     (line 4238)
emphasis:                                      See 4.1.      (line  444)
enclosure list:                                See 24.4.     (line 4616)
ending & starting:                             See 2.        (line  301)
enlarge current page:                          See 14.4.     (line 2706)
environments:                                  See 8.        (line  871)
environments, defining:                        See 10.5.     (line 2304)
equation number, cross referencing:            See 7.3.      (line  859)
equation numbers, omitting:                    See 8.8.      (line 1079)
equations, aligning:                           See 8.8.      (line 1065)
equations, environment for:                    See 8.9.      (line 1091)
es-zet German letter:                          See 21.4.     (line 4352)
exponent:                                      See 16.1.     (line 2856)
figure number, cross referencing:              See 7.3.      (line  859)
figures, footnotes in:                         See 8.17.     (line 1391)
figures, inserting:                            See 8.10.     (line 1104)
fixed-width font:                              See 4.1.      (line  526)
flushing floats and starting a page:           See 14.2.     (line 2694)
font commands, low-level:                      See 4.3.      (line  558)
font sizes:                                    See 4.2.      (line  532)
font styles:                                   See 4.1.      (line  424)
fonts:                                         See 4.        (line  418)
fonts, new commands for:                       See 10.7.     (line 2369)
footer style:                                  See 18.3.     (line 3824)
footer, parameters for:                        See 5.5.      (line  706)
footnote number, cross referencing:            See 7.3.      (line  859)
footnote parameters:                           See 9.4.      (line 2209)
footnotes in figures:                          See 8.17.     (line 1391)
footnotes, creating:                           See 9.        (line 2158)
formulas, environment for:                     See 8.9.      (line 1091)
formulas, math:                                See 16.       (line 2818)
fragile commands:                              See 10.8.     (line 2383)
functions, math:                               See 16.3.     (line 3502)
global options:                                See 3.1.      (line  336)
glossaries:                                    See 23.2.     (line 4513)
grave accent:                                  See 21.3.     (line 4286)
grave accent, math:                            See 16.4.     (line 3631)
greek letters:                                 See 16.2.     (line 2865)
ha'c<ek accent, math:                          See 16.4.     (line 3622)
hacek accent:                                  See 21.3.     (line 4322)
hat accent:                                    See 21.3.     (line 4283)
hat accent, math:                              See 16.4.     (line 3634)
header style:                                  See 18.3.     (line 3824)
header, parameters for:                        See 5.5.      (line  706)
hungarian umlaut accent:                       See 21.3.     (line 4306)
hyphenation, defining:                         See 13.7.     (line 2646)
hyphenation, forcing:                          See 13.4.     (line 2616)
hyphenation, preventing:                       See 20.1.     (line 4025)
in-line formulas:                              See 8.16.     (line 1363)
indent, forcing:                               See 15.1.     (line 2747)
indent, suppressing:                           See 15.2.     (line 2758)
indentation of paragraphs, in minipage:        See 8.17.     (line 1387)
indexes:                                       See 23.3.     (line 4528)
input file:                                    See 22.       (line 4388)
input/Output:                                  See 25.       (line 4696)
inserting figures:                             See 8.10.     (line 1104)
italic font:                                   See 4.1.      (line  511)
justification, ragged left:                    See 8.12.1.   (line 1210)
justification, ragged right:                   See 8.11.1.   (line 1184)
Knuth, Donald E.:
          See ``LaTeX2e''.                                   (line  251)
labelled lists, creating:                      See 8.4.      (line  976)
Lamport, Leslie:
          See ``LaTeX2e''.                                   (line  251)
LaTeX logo:                                    See 21.2.     (line 4235)
LaTeX overview:                                See 1.        (line  261)
LaTeX Project team:
          See ``LaTeX2e''.                                   (line  251)
layout commands:                               See 5.        (line  634)
layout, page parameters for:                   See 5.5.      (line  706)
left quote:                                    See 21.2.     (line 4242)
left-justifying text:                          See 8.11.1.   (line 1184)
left-justifying text, environment for:         See 8.11.     (line 1171)
left-to-right mode:                            See 17.       (line 3729)
lengths, adding to:                            See 12.2.     (line 2531)
lengths, defining and using:                   See 12.       (line 2518)
lengths, defining new:                         See 10.3.     (line 2279)
lengths, predefined:                           See 12.6.     (line 2559)
lengths, setting:                              See 12.1.     (line 2524)
letters:                                       See 24.       (line 4547)
letters, accented:                             See 21.3.     (line 4263)
letters, ending:                               See 24.3.     (line 4606)
letters, non-English:                          See 21.4.     (line 4328)
letters, starting:                             See 24.8.     (line 4649)
line break, forcing:                           See 13.1.     (line 2590)
line breaking:                                 See 13.       (line 2578)
line breaks, forcing:                          See 13.8.     (line 2662)
line breaks, preventing:                       See 13.8.     (line 2662)
lines in tables:                               See 8.23.     (line 1816)
lining text up in columns using tab stops:     See 8.21.     (line 1688)
lining text up in tables:                      See 8.23.     (line 1816)
list items, specifying counter:                See 11.2.     (line 2453)
lists of items:                                See 8.13.     (line 1223)
lists of items, generic:                       See 8.15.     (line 1341)
lists of items, numbered:                      See 8.7.      (line 1024)
loading additional packages:                   See 3.1.      (line  404)
logo, LaTeX:                                   See 21.2.     (line 4235)
logo, TeX:                                     See 21.2.     (line 4257)
low-level font commands:                       See 4.3.      (line  558)
lR mode:                                       See 17.       (line 3729)
macron accent:                                 See 21.3.     (line 4280)
makeindex program:                             See 23.3.     (line 4540)
making a title page:                           See 8.26.     (line 2088)
making paragraphs:                             See 15.       (line 2739)
marginal notes:                                See 15.4.     (line 2771)
math accents:                                  See 16.4.     (line 3611)
math formulas:                                 See 16.       (line 2818)
math functions:                                See 16.3.     (line 3502)
math Miscellany:                               See 16.6.     (line 3679)
math mode:                                     See 17.       (line 3729)
math mode, entering:                           See 16.       (line 2818)
math mode, spacing:                            See 16.5.     (line 3658)
math symbols:                                  See 16.2.     (line 2865)
minipage, creating a:                          See 8.17.     (line 1375)
modes:                                         See 17.       (line 3729)
monospace font:                                See 4.1.      (line  526)
moving arguments:                              See 10.8.     (line 2383)
multicolumn text:                              See 5.2.      (line  645)
multiplication symbol, discretionary line break:See 16.6.    (line 3680)
nested \include, not allowed:                  See 22.1.     (line 4409)
new commands, defining:                        See 10.1.     (line 2231)
new line, output as input:                     See 13.2.     (line 2600)
new line, starting:                            See 13.1.     (line 2590)
new line, starting (paragraph mode):           See 13.3.     (line 2609)
new page, starting:                            See 14.3.     (line 2700)
non-English characters:                        See 21.4.     (line 4328)
notes in the margin:                           See 15.4.     (line 2771)
null delimiter:                                See 16.6.     (line 3694)
numbered items, specifying counter:            See 11.2.     (line 2453)
oblique font:                                  See 4.1.      (line  523)
oe ligature:                                   See 21.4.     (line 4349)
one-column output:                             See 5.1.      (line  639)
opening quote:                                 See 21.2.     (line 4242)
options, document class:                       See 3.1.      (line  336)
options, global:                               See 3.1.      (line  411)
oslash:                                        See 21.4.     (line 4345)
overbar accent:                                See 21.3.     (line 4280)
overdot accent, math:                          See 16.4.     (line 3628)
overview of LaTeX:                             See 1.        (line  261)
packages, loading:                             See 3.1.      (line  404)
page break, forcing:                           See 14.5.     (line 2721)
page break, preventing:                        See 14.5.     (line 2721)
page breaking:                                 See 14.       (line 2679)
page layout parameters:                        See 5.5.      (line  706)
page number, cross referencing:                See 7.2.      (line  849)
page numbering style:                          See 18.2.     (line 3800)
page styles:                                   See 18.       (line 3767)
paragraph indentation, in minipage:            See 8.17.     (line 1387)
paragraph indentations in quoted text:         See 8.19.     (line 1658)
paragraph indentations in quoted text, omitting:See 8.20.    (line 1673)
paragraph mode:                                See 17.       (line 3729)
paragraph sign:                                See 21.2.     (line 4245)
paragraphs:                                    See 15.       (line 2739)
parameters, page layout:                       See 5.5.      (line  706)
pictures, creating:                            See 8.18.     (line 1404)
pilcrow:                                       See 21.2.     (line 4245)
poetry, an environment for:                    See 8.28.     (line 2139)
polish l:                                      See 21.4.     (line 4341)
postscript, in letters:                        See 24.9.     (line 4662)
pounds symbol:                                 See 21.2.     (line 4248)
preamble, defined:                             See 2.        (line  312)
predefined lengths:                            See 12.6.     (line 2559)
prompt, *:                                     See 26.       (line 4738)
quoted text with paragraph indentation, displaying:See 8.19. (line 1658)
quoted text without paragraph indentation, displaying:See 8.20.
                                                             (line 1673)
ragged left text:                              See 8.12.1.   (line 1210)
ragged left text, environment for:             See 8.12.     (line 1197)
ragged right text:                             See 8.11.1.   (line 1184)
ragged right text, environment for:            See 8.11.     (line 1171)
redefining environments:                       See 10.5.     (line 2304)
remarks in the margin:                         See 15.4.     (line 2771)
reserved characters:                           See 21.1.     (line 4191)
right quote:                                   See 21.2.     (line 4251)
right-justifying text:                         See 8.12.1.   (line 1210)
right-justifying text, environment for:        See 8.12.     (line 1197)
robust commands:                               See 10.8.     (line 2393)
roman font:                                    See 4.1.      (line  514)
running header and footer:                     See 5.5.      (line  706)
running header and footer style:               See 18.3.     (line 3824)
sans serif font:                               See 4.1.      (line  520)
script letters for math:                       See 4.1.      (line  505)
section number, cross referencing:             See 7.3.      (line  859)
section symbol:                                See 21.2.     (line 4254)
sectioning:                                    See 6.        (line  756)
setspace package:                              See 4.3.      (line  615)
setting counters:                              See 11.4.     (line 2478)
sharp S letters:                               See 21.4.     (line 4352)
simulating typed text:                         See 8.27.     (line 2105)
sizes of text:                                 See 4.2.      (line  532)
slanted font:                                  See 4.1.      (line  523)
small caps font:                               See 4.1.      (line  517)
space, inserting vertical:                     See 19.9.     (line 3967)
spaces:                                        See 19.       (line 3869)
spacing within math mode:                      See 16.5.     (line 3658)
special characters:                            See 21.4.     (line 4328)
splitting the input file:                      See 22.       (line 4388)
starting & ending:                             See 2.        (line  301)
starting a new page:                           See 14.3.     (line 2700)
starting a new page and clearing floats:       See 14.2.     (line 2694)
starting on a right-hand page:                 See 14.1.     (line 2686)
sterling symbol:                               See 21.2.     (line 4248)
stretch, omitting vertical:                    See 5.4.      (line  700)
styles of text:                                See 4.1.      (line  424)
styles, page:                                  See 18.       (line 3767)
subscript:                                     See 16.1.     (line 2856)
superscript:                                   See 16.1.     (line 2856)
symbols, math:                                 See 16.2.     (line 2865)
tab stops, using:                              See 8.21.     (line 1688)
table of contents entry, manually adding:      See 23.1.1.   (line 4467)
table of contents, creating:                   See 23.1.     (line 4447)
tables, creating:                              See 8.22.     (line 1780)
terminal Input/Output:                         See 25.       (line 4696)
TeX logo:                                      See 21.2.     (line 4257)
text symbols:                                  See 21.2.     (line 4222)
thanks, for titlepage:                         See 18.1.     (line 3789)
theorems, defining:                            See 10.6.     (line 2340)
theorems, typesetting:                         See 8.25.     (line 2075)
tie-after accent:                              See 21.3.     (line 4316)
tilde accent:                                  See 21.3.     (line 4291)
tilde accent, math:                            See 16.4.     (line 3643)
title pages, creating:                         See 8.26.     (line 2088)
title, for titlepage:                          See 18.1.     (line 3793)
titles, making:                                See 18.1.     (line 3773)
two-column output:                             See 5.2.      (line  645)
typed text, simulating:                        See 8.27.     (line 2105)
typeface sizes:                                See 4.2.      (line  532)
typeface styles:                               See 4.1.      (line  424)
typefaces:                                     See 4.        (line  418)
typewriter font:                               See 4.1.      (line  526)
typewriter labels in lists:                    See 8.4.      (line  988)
umlaut accent:                                 See 21.3.     (line 4269)
unordered lists:                               See 8.13.     (line 1223)
using BibTeX:                                  See 8.24.4.   (line 2035)
variables, a list of:                          See 11.       (line 2405)
vector symbol, math:                           See 16.4.     (line 3646)
verbatim text:                                 See 8.27.     (line 2105)
verbatim text, inline:                         See 8.27.1.   (line 2122)
vertical space:                                See 19.9.     (line 3967)
vertical space before paragraphs:              See 15.3.     (line 2765)
visible space:                                 See 8.27.1.   (line 2133)
wide hat accent, math:                         See 16.4.     (line 3649)
wide tile accent, math:                        See 16.4.     (line 3652)
xindy program:                                 See 23.3.     (line 4540)
Command Index
*************

$:                                             See 16.       (line 2838)
10pt option:                                   See 3.1.      (line  344)
11pt option:                                   See 3.1.      (line  344)
12pt option:                                   See 3.1.      (line  344)
@{...}:                                        See 8.2.      (line  917)
\" (umlaut accent):                            See 21.3.     (line 4269)
\#:                                            See 21.1.     (line 4196)
\$:                                            See 21.1.     (line 4196)
\%:                                            See 21.1.     (line 4196)
\&:                                            See 21.1.     (line 4196)
\' (acute accent):                             See 21.3.     (line 4272)
\' (tabbing):                                  See 8.21.     (line 1727)
\(:                                            See 16.       (line 2830)
\):                                            See 16.       (line 2830)
\*:                                            See 16.6.     (line 3679)
\+:                                            See 8.21.     (line 1719)
\,:                                            See 16.5.     (line 3671)
\-:                                            See 8.21.     (line 1723)
\- (hyphenation):                              See 13.4.     (line 2616)
\. (dot-over accent):                          See 21.3.     (line 4277)
\/:                                            See 19.6.     (line 3936)
\::                                            See 16.5.     (line 3668)
\;:                                            See 16.5.     (line 3664)
\<:                                            See 8.21.     (line 1715)
\= (macron accent):                            See 21.3.     (line 4280)
\= (tabbing):                                  See 8.21.     (line 1709)
\> <1>:                                        See 16.5.     (line 3668)
\>:                                            See 8.21.     (line 1713)
\> (tabbing):                                  See 8.21.     (line 1712)
\@:                                            See 19.4.     (line 3915)
\[:                                            See 16.       (line 2830)
\\ (for \shortstack objects):                  See 8.18.13.  (line 1642)
\\ (for array):                                See 8.2.      (line  914)
\\ (for center):                               See 8.3.      (line  946)
\\ (for eqnarray):                             See 8.8.      (line 1071)
\\ (for flushright):                           See 8.12.     (line 1203)
\\ for \author:                                See 18.1.     (line 3779)
\\ for \title:                                 See 18.1.     (line 3793)
\\ for flushleft:                              See 8.11.     (line 1177)
\\ for letters:                                See 24.       (line 4573)
\\ for tabular:                                See 8.23.     (line 1833)
\\ for verse:                                  See 8.28.     (line 2150)
\\ force line break:                           See 13.1.     (line 2590)
\\ tabbing:                                    See 8.21.     (line 1706)
\\* (for eqnarray):                            See 8.8.      (line 1076)
\]:                                            See 16.       (line 2830)
\^:                                            See 21.1.     (line 4206)
\^ (circumflex accent):                        See 21.3.     (line 4283)
\_:                                            See 21.1.     (line 4196)
\` (grave accent):                             See 21.3.     (line 4286)
\` (tabbing):                                  See 8.21.     (line 1733)
\a (tabbing):                                  See 8.21.     (line 1742)
\a' (acute accent in tabbing):                 See 8.21.     (line 1743)
\a= (macron accent in tabbing):                See 8.21.     (line 1743)
\a` (grave accent in tabbing):                 See 8.21.     (line 1743)
\AA (AA):                                      See 21.4.     (line 4333)
\aa (aa):                                      See 21.4.     (line 4333)
\acute:                                        See 16.4.     (line 3615)
\addcontentsline{EXT}{UNIT}{TEXT}:             See 23.1.1.   (line 4467)
\address:                                      See 24.1.     (line 4583)
\addtocontents{EXT}{TEXT}:                     See 23.1.2.   (line 4498)
\addtocounter:                                 See 11.5.     (line 2488)
\addtolength:                                  See 12.2.     (line 2531)
\addvspace:                                    See 19.9.     (line 3967)
\AE (AE):                                      See 21.4.     (line 4337)
\ae (ae):                                      See 21.4.     (line 4337)
\aleph:                                        See 16.2.     (line 2873)
\Alph:                                         See 11.1.     (line 2427)
\alph:                                         See 11.1.     (line 2424)
\Alph example:                                 See 8.7.      (line 1060)
\alpha:                                        See 16.2.     (line 2876)
\amalg:                                        See 16.2.     (line 2879)
\and for \author:                              See 18.1.     (line 3779)
\angle:                                        See 16.2.     (line 2882)
\appendix:                                     See 6.        (line  794)
\approx:                                       See 16.2.     (line 2885)
\arabic:                                       See 11.1.     (line 2430)
\arccos:                                       See 16.3.     (line 3505)
\arcsin:                                       See 16.3.     (line 3508)
\arctan:                                       See 16.3.     (line 3511)
\arg:                                          See 16.3.     (line 3514)
\arraycolsep:                                  See 8.2.      (line  929)
\arrayrulewidth:                               See 8.23.     (line 1900)
\arraystretch:                                 See 8.23.     (line 1904)
\ast:                                          See 16.2.     (line 2888)
\asymp:                                        See 16.2.     (line 2891)
\author{NAME \and NAME2}:                      See 18.1.     (line 3778)
\b (bar-under accent):                         See 21.3.     (line 4294)
\backslash <1>:                                See 21.1.     (line 4201)
\backslash:                                    See 16.2.     (line 2894)
\bar (macron, bar-over accent):                See 21.3.     (line 4297)
\baselineskip:                                 See 4.3.      (line  609)
\baselinestretch:                              See 4.3.      (line  615)
\begin:                                        See 8.        (line  871)
\beta:                                         See 16.2.     (line 2897)
\bf:                                           See 4.1.      (line  501)
\bfseries:                                     See 4.1.      (line  450)
\bibitem:                                      See 8.24.1.   (line 1995)
\bibliography:                                 See 8.24.4.   (line 2035)
\bibliographystyle:                            See 8.24.4.   (line 2035)
\bigcap:                                       See 16.2.     (line 2900)
\bigcirc:                                      See 16.2.     (line 2903)
\bigcup:                                       See 16.2.     (line 2906)
\bigodot:                                      See 16.2.     (line 2909)
\bigoplus:                                     See 16.2.     (line 2912)
\bigotimes:                                    See 16.2.     (line 2915)
\bigskip:                                      See 19.10.    (line 3981)
\bigskipamount:                                See 19.10.    (line 3981)
\bigsqcup:                                     See 16.2.     (line 2924)
\bigtriangledown:                              See 16.2.     (line 2918)
\bigtriangleup:                                See 16.2.     (line 2921)
\biguplus:                                     See 16.2.     (line 2927)
\bigwedge:                                     See 16.2.     (line 2933)
\bmod:                                         See 16.3.     (line 3517)
\boldmath:                                     See 16.       (line 2843)
\bot:                                          See 16.2.     (line 2936)
\bottomfraction:                               See 8.10.     (line 1138)
\bowtie:                                       See 16.2.     (line 2939)
\Box:                                          See 16.2.     (line 2942)
\breve:                                        See 16.4.     (line 3618)
\bullet:                                       See 16.2.     (line 2945)
\c (cedilla accent):                           See 21.3.     (line 4300)
\cal:                                          See 4.1.      (line  504)
\cap:                                          See 16.2.     (line 2948)
\caption:                                      See 8.10.     (line 1134)
\cc:                                           See 24.2.     (line 4596)
\cdot:                                         See 16.2.     (line 2951)
\cdots:                                        See 16.6.     (line 3683)
\centering:                                    See 8.3.1.    (line  953)
\chapter:                                      See 6.        (line  760)
\check:                                        See 16.4.     (line 3621)
\chi:                                          See 16.2.     (line 2954)
\circ:                                         See 16.2.     (line 2957)
\circle:                                       See 8.18.1.   (line 1470)
\cite:                                         See 8.24.2.   (line 2012)
\cleardoublepage:                              See 14.1.     (line 2686)
\clearpage:                                    See 14.2.     (line 2694)
\cline:                                        See 8.23.2.   (line 1944)
\closing:                                      See 24.3.     (line 4606)
\clubsuit:                                     See 16.2.     (line 2960)
\columnsep:                                    See 5.2.      (line  655)
\columnseprule:                                See 5.2.      (line  658)
\columnwidth:                                  See 5.2.      (line  662)
\cong:                                         See 16.2.     (line 2963)
\contentsline:                                 See 23.1.1.   (line 4492)
\coprod:                                       See 16.2.     (line 2966)
\copyright:                                    See 21.2.     (line 4225)
\cos:                                          See 16.3.     (line 3520)
\cosh:                                         See 16.3.     (line 3523)
\cot:                                          See 16.3.     (line 3526)
\coth:                                         See 16.3.     (line 3529)
\csc:                                          See 16.3.     (line 3532)
\cup:                                          See 16.2.     (line 2969)
\d (dot-under accent):                         See 21.3.     (line 4303)
\dag:                                          See 21.2.     (line 4228)
\dagger:                                       See 16.2.     (line 2972)
\dashbox:                                      See 8.18.4.   (line 1518)
\dashv:                                        See 16.2.     (line 2975)
\date{TEXT}:                                   See 18.1.     (line 3784)
\day:                                          See 11.8.     (line 2507)
\dblfloatpagefraction:                         See 5.2.      (line  674)
\dblfloatsep:                                  See 5.2.      (line  678)
\dbltextfloatsep:                              See 5.2.      (line  683)
\dbltopfraction:                               See 5.2.      (line  669)
\ddag:                                         See 21.2.     (line 4231)
\ddagger:                                      See 16.2.     (line 2978)
\ddot:                                         See 16.4.     (line 3624)
\ddots:                                        See 16.6.     (line 3687)
\deg:                                          See 16.3.     (line 3535)
\delta:                                        See 16.2.     (line 2984)
\Delta:                                        See 16.2.     (line 2981)
\depth:                                        See 12.6.     (line 2563)
\det:                                          See 16.3.     (line 3538)
\diamond:                                      See 16.2.     (line 2990)
\Diamond:                                      See 16.2.     (line 2987)
\diamondsuit:                                  See 16.2.     (line 2993)
\dim:                                          See 16.3.     (line 3541)
\displaystyle:                                 See 16.       (line 2848)
\div:                                          See 16.2.     (line 2996)
\documentclass:                                See 3.        (line  319)
\dot:                                          See 16.4.     (line 3627)
\doteq:                                        See 16.2.     (line 2999)
\dotfill:                                      See 19.8.     (line 3961)
\doublerulesep:                                See 8.23.     (line 1908)
\Downarrow:                                    See 16.2.     (line 3005)
\downarrow:                                    See 16.2.     (line 3002)
\ell:                                          See 16.2.     (line 3008)
\em:                                           See 4.1.      (line  507)
\emph:                                         See 4.1.      (line  444)
\emptyset:                                     See 16.2.     (line 3011)
\encl:                                         See 24.4.     (line 4616)
\end:                                          See 8.        (line  871)
\enlargethispage:                              See 14.4.     (line 2706)
\enumi:                                        See 8.7.      (line 1050)
\enumii:                                       See 8.7.      (line 1050)
\enumiii:                                      See 8.7.      (line 1050)
\enumiv:                                       See 8.7.      (line 1050)
\epsilon:                                      See 16.2.     (line 3014)
\equiv:                                        See 16.2.     (line 3017)
\eta:                                          See 16.2.     (line 3020)
\evensidemargin:                               See 3.1.      (line  385)
\exists:                                       See 16.2.     (line 3023)
\exp:                                          See 16.3.     (line 3544)
\fbox:                                         See 20.2.     (line 4032)
\fboxrule <1>:                                 See 20.2.     (line 4042)
\fboxrule:                                     See 8.18.3.   (line 1511)
\fboxsep <1>:                                  See 20.2.     (line 4042)
\fboxsep:                                      See 8.18.3.   (line 1511)
\fill:                                         See 19.2.     (line 3897)
\flat:                                         See 16.2.     (line 3026)
\floatpagefraction:                            See 8.10.     (line 1141)
\floatsep:                                     See 8.10.     (line 1145)
\flushbottom:                                  See 5.3.      (line  691)
\fnsymbol:                                     See 11.1.     (line 2439)
\fontencoding:                                 See 4.3.      (line  563)
\fontfamily:                                   See 4.3.      (line  566)
\fontseries:                                   See 4.3.      (line  577)
\fontshape:                                    See 4.3.      (line  592)
\fontsize:                                     See 4.3.      (line  609)
\footnote:                                     See 9.1.      (line 2165)
\footnotemark:                                 See 9.2.      (line 2180)
\footnoterule:                                 See 9.4.      (line 2209)
\footnotesep:                                  See 9.4.      (line 2215)
\footnotesize:                                 See 4.2.      (line  537)
\footnotetext:                                 See 9.3.      (line 2195)
\footskip:                                     See 5.5.      (line  716)
\forall:                                       See 16.2.     (line 3029)
\frac:                                         See 16.6.     (line 3691)
\frac{num}{den}:                               See 16.6.     (line 3690)
\frame:                                        See 8.18.5.   (line 1531)
\framebox <1>:                                 See 20.2.     (line 4032)
\framebox:                                     See 8.18.3.   (line 1503)
\frown:                                        See 16.2.     (line 3032)
\fussy:                                        See 13.5.     (line 2628)
\gamma:                                        See 16.2.     (line 3038)
\Gamma:                                        See 16.2.     (line 3035)
\gcd:                                          See 16.3.     (line 3547)
\ge:                                           See 16.2.     (line 3041)
\geq:                                          See 16.2.     (line 3044)
\gets:                                         See 16.2.     (line 3047)
\gg:                                           See 16.2.     (line 3050)
\glossary:                                     See 23.2.     (line 4515)
\glossaryentry:                                See 23.2.     (line 4518)
\grave:                                        See 16.4.     (line 3630)
\H (Hungarian umlaut accent):                  See 21.3.     (line 4306)
\hat:                                          See 16.4.     (line 3633)
\hbar:                                         See 16.2.     (line 3053)
\headheight:                                   See 5.5.      (line  706)
\headsep:                                      See 5.5.      (line  711)
\heartsuit:                                    See 16.2.     (line 3056)
\height:                                       See 12.6.     (line 2561)
\hfill:                                        See 19.2.     (line 3894)
\hline:                                        See 8.23.3.   (line 1955)
\hom:                                          See 16.3.     (line 3550)
\hookleftarrow:                                See 16.2.     (line 3059)
\hookrightarrow:                               See 16.2.     (line 3062)
\hrulefill:                                    See 19.7.     (line 3954)
\hspace:                                       See 19.1.     (line 3878)
\Huge:                                         See 4.2.      (line  537)
\huge:                                         See 4.2.      (line  537)
\hyphenation:                                  See 13.7.     (line 2646)
\i (dotless i):                                See 21.3.     (line 4310)
\iff:                                          See 16.2.     (line 3065)
\Im:                                           See 16.2.     (line 3068)
\imath:                                        See 16.4.     (line 3636)
\in:                                           See 16.2.     (line 3071)
\include:                                      See 22.1.     (line 4397)
\includeonly:                                  See 22.2.     (line 4415)
\indent:                                       See 15.1.     (line 2747)
\index:                                        See 23.3.     (line 4530)
\indexentry:                                   See 23.3.     (line 4533)
\inf:                                          See 16.3.     (line 3553)
\infty:                                        See 16.2.     (line 3074)
\input:                                        See 22.3.     (line 4429)
\int:                                          See 16.2.     (line 3077)
\intextsep:                                    See 8.10.     (line 1149)
\iota:                                         See 16.2.     (line 3080)
\it:                                           See 4.1.      (line  510)
\item <1>:                                     See 8.13.     (line 1223)
\item <2>:                                     See 8.7.      (line 1037)
\item:                                         See 8.4.      (line  984)
\itemindent:                                   See 8.13.     (line 1269)
\itemsep:                                      See 8.13.     (line 1292)
\itshape:                                      See 4.1.      (line  441)
\j (dotless j):                                See 21.3.     (line 4313)
\jmath:                                        See 16.4.     (line 3639)
\Join:                                         See 16.2.     (line 3083)
\kappa:                                        See 16.2.     (line 3086)
\ker:                                          See 16.3.     (line 3556)
\kill:                                         See 8.21.     (line 1747)
\L (/L):                                       See 21.4.     (line 4341)
\l (/l):                                       See 21.4.     (line 4341)
\label:                                        See 7.1.      (line  813)
\labelenumi:                                   See 8.7.      (line 1054)
\labelenumii:                                  See 8.7.      (line 1054)
\labelenumiii:                                 See 8.7.      (line 1054)
\labelenumiv:                                  See 8.7.      (line 1054)
\labelitemi:                                   See 8.13.     (line 1249)
\labelitemii:                                  See 8.13.     (line 1249)
\labelitemiii:                                 See 8.13.     (line 1249)
\labelitemiv:                                  See 8.13.     (line 1249)
\labelsep:                                     See 8.13.     (line 1272)
\labelwidth:                                   See 8.13.     (line 1275)
\lambda:                                       See 16.2.     (line 3092)
\Lambda:                                       See 16.2.     (line 3089)
\land:                                         See 16.2.     (line 3095)
\langle:                                       See 16.2.     (line 3098)
\LARGE:                                        See 4.2.      (line  537)
\Large:                                        See 4.2.      (line  537)
\large:                                        See 4.2.      (line  537)
\LaTeX:                                        See 21.2.     (line 4234)
\lbrace:                                       See 16.2.     (line 3101)
\lbrack:                                       See 16.2.     (line 3104)
\lceil:                                        See 16.2.     (line 3107)
\ldots:                                        See 21.2.     (line 4237)
\le:                                           See 16.2.     (line 3110)
\leadsto:                                      See 16.2.     (line 3113)
\left DELIM1 ... \right DELIM2:                See 16.6.     (line 3693)
\leftarrow:                                    See 16.2.     (line 3118)
\Leftarrow:                                    See 16.2.     (line 3115)
\lefteqn:                                      See 8.8.      (line 1084)
\leftharpoondown:                              See 16.2.     (line 3121)
\leftharpoonup:                                See 16.2.     (line 3124)
\leftmargin:                                   See 8.13.     (line 1256)
\leftmargini:                                  See 8.13.     (line 1256)
\leftmarginii:                                 See 8.13.     (line 1256)
\leftmarginiii:                                See 8.13.     (line 1256)
\leftmarginiv:                                 See 8.13.     (line 1256)
\leftmarginv:                                  See 8.13.     (line 1256)
\leftmarginvi:                                 See 8.13.     (line 1256)
\leftrightarrow:                               See 16.2.     (line 3130)
\Leftrightarrow:                               See 16.2.     (line 3127)
\leq:                                          See 16.2.     (line 3133)
\lfloor:                                       See 16.2.     (line 3136)
\lg:                                           See 16.3.     (line 3559)
\lhd:                                          See 16.2.     (line 3139)
\lim:                                          See 16.3.     (line 3562)
\liminf:                                       See 16.3.     (line 3565)
\limsup:                                       See 16.3.     (line 3568)
\line:                                         See 8.18.6.   (line 1542)
\linebreak:                                    See 13.8.     (line 2662)
\linethickness:                                See 8.18.7.   (line 1557)
\linewidth:                                    See 5.5.      (line  721)
\listoffigures:                                See 23.1.     (line 4457)
\listoftables:                                 See 23.1.     (line 4457)
\listparindent:                                See 8.13.     (line 1278)
\ll:                                           See 16.2.     (line 3142)
\ln:                                           See 16.3.     (line 3571)
\lnot:                                         See 16.2.     (line 3145)
\location:                                     See 24.5.     (line 4625)
\log:                                          See 16.3.     (line 3574)
\longleftarrow:                                See 16.2.     (line 3148)
\longleftrightarrow:                           See 16.2.     (line 3151)
\longmapsto:                                   See 16.2.     (line 3154)
\longrightarrow:                               See 16.2.     (line 3157)
\lor:                                          See 16.2.     (line 3160)
\lq:                                           See 21.2.     (line 4241)
\makebox:                                      See 20.4.     (line 4063)
\makebox (picture):                            See 8.18.2.   (line 1481)
\makeglossary:                                 See 23.2.     (line 4513)
\makeindex:                                    See 23.3.     (line 4528)
\makelabels:                                   See 24.6.     (line 4633)
\maketitle:                                    See 18.1.     (line 3773)
\mapsto:                                       See 16.2.     (line 3163)
\marginpar:                                    See 15.4.     (line 2771)
\marginparpush:                                See 15.4.     (line 2800)
\marginparsep:                                 See 15.4.     (line 2804)
\marginparwidth:                               See 15.4.     (line 2808)
\markboth{LEFT}{RIGHT}:                        See 18.3.     (line 3848)
\markright{RIGHT}:                             See 18.3.     (line 3855)
\mathbf:                                       See 4.1.      (line  474)
\mathcal:                                      See 4.1.      (line  490)
\mathnormal:                                   See 4.1.      (line  487)
\mathrm:                                       See 4.1.      (line  471)
\mathsf:                                       See 4.1.      (line  477)
\mathtt:                                       See 4.1.      (line  480)
\mathversion:                                  See 4.1.      (line  492)
\max:                                          See 16.3.     (line 3577)
\mbox:                                         See 20.1.     (line 4025)
\mdseries:                                     See 4.1.      (line  447)
\medskip:                                      See 19.10.    (line 3985)
\medskipamount:                                See 19.10.    (line 3985)
\mho:                                          See 16.2.     (line 3166)
\mid:                                          See 16.2.     (line 3168)
\min:                                          See 16.3.     (line 3580)
\models:                                       See 16.2.     (line 3171)
\month:                                        See 11.8.     (line 2507)
\mp:                                           See 16.2.     (line 3174)
\mu:                                           See 16.2.     (line 3177)
\multicolumn:                                  See 8.23.1.   (line 1921)
\multiput:                                     See 8.18.10.  (line 1581)
\nabla:                                        See 16.2.     (line 3180)
\name:                                         See 24.7.     (line 4641)
\natural:                                      See 16.2.     (line 3183)
\ne:                                           See 16.2.     (line 3186)
\nearrow:                                      See 16.2.     (line 3189)
\neg:                                          See 16.2.     (line 3192)
\neq:                                          See 16.2.     (line 3195)
\newcommand:                                   See 10.1.     (line 2231)
\newcounter:                                   See 10.2.     (line 2264)
\newenvironment:                               See 10.5.     (line 2304)
\newfont:                                      See 10.7.     (line 2369)
\newlength:                                    See 10.3.     (line 2279)
\NEWLINE:                                      See 19.3.     (line 3904)
\newline:                                      See 13.3.     (line 2609)
\newpage:                                      See 14.3.     (line 2700)
\newsavebox:                                   See 10.4.     (line 2294)
\newtheorem:                                   See 10.6.     (line 2340)
\ni:                                           See 16.2.     (line 3198)
\nocite:                                       See 8.24.3.   (line 2027)
\nofiles:                                      See 23.1.     (line 4461)
\noindent:                                     See 15.2.     (line 2758)
\nolinebreak:                                  See 13.8.     (line 2662)
\nonumber:                                     See 8.8.      (line 1079)
\nopagebreak:                                  See 14.5.     (line 2721)
\normalfont:                                   See 4.1.      (line  468)
\normalmarginpar:                              See 15.4.     (line 2788)
\normalsize:                                   See 4.2.      (line  537)
\not:                                          See 16.2.     (line 3201)
\notin:                                        See 16.2.     (line 3204)
\nu:                                           See 16.2.     (line 3207)
\nwarrow:                                      See 16.2.     (line 3210)
\O (/O):                                       See 21.4.     (line 4345)
\o (/o):                                       See 21.4.     (line 4345)
\obeycr:                                       See 13.2.     (line 2600)
\oddsidemargin:                                See 3.1.      (line  385)
\odot:                                         See 16.2.     (line 3213)
\OE (OE):                                      See 21.4.     (line 4349)
\oe (oe):                                      See 21.4.     (line 4349)
\oint:                                         See 16.2.     (line 3216)
\omega:                                        See 16.2.     (line 3222)
\Omega:                                        See 16.2.     (line 3219)
\ominus:                                       See 16.2.     (line 3225)
\onecolumn:                                    See 5.1.      (line  639)
\opening:                                      See 24.8.     (line 4649)
\oplus:                                        See 16.2.     (line 3228)
\oslash:                                       See 16.2.     (line 3231)
\otimes:                                       See 16.2.     (line 3234)
\oval:                                         See 8.18.11.  (line 1591)
\overbrace{TEXT}:                              See 16.6.     (line 3698)
\overline{TEXT}:                               See 16.6.     (line 3702)
\owns:                                         See 16.2.     (line 3237)
\P:                                            See 21.2.     (line 4244)
\pagebreak:                                    See 14.5.     (line 2721)
\pagenumbering:                                See 18.2.     (line 3800)
\pageref:                                      See 7.2.      (line  849)
\pagestyle:                                    See 18.3.     (line 3824)
\paragraph:                                    See 6.        (line  769)
\parallel:                                     See 16.2.     (line 3240)
\parbox:                                       See 20.5.     (line 4091)
\parindent <1>:                                See 15.1.     (line 2747)
\parindent:                                    See 8.17.     (line 1387)
\parsep:                                       See 8.13.     (line 1297)
\parskip:                                      See 15.3.     (line 2765)
\parskip example:                              See 8.13.     (line 1320)
\part:                                         See 6.        (line  758)
\partial:                                      See 16.2.     (line 3243)
\partopsep:                                    See 8.13.     (line 1307)
\perp:                                         See 16.2.     (line 3246)
\phi:                                          See 16.2.     (line 3249)
\pi:                                           See 16.2.     (line 3255)
\Pi:                                           See 16.2.     (line 3252)
\pm:                                           See 16.2.     (line 3258)
\pmod:                                         See 16.3.     (line 3583)
\poptabs:                                      See 8.21.     (line 1753)
\pounds:                                       See 21.2.     (line 4247)
\Pr:                                           See 16.3.     (line 3586)
\prec:                                         See 16.2.     (line 3261)
\preceq:                                       See 16.2.     (line 3264)
\prime:                                        See 16.2.     (line 3267)
\prod:                                         See 16.2.     (line 3270)
\propto:                                       See 16.2.     (line 3273)
\protect:                                      See 10.8.     (line 2383)
\ps:                                           See 24.9.     (line 4662)
\psi:                                          See 16.2.     (line 3279)
\Psi:                                          See 16.2.     (line 3276)
\pushtabs:                                     See 8.21.     (line 1756)
\put:                                          See 8.18.12.  (line 1618)
\raggedbottom:                                 See 5.4.      (line  700)
\raggedleft:                                   See 8.12.1.   (line 1210)
\raggedright:                                  See 8.11.1.   (line 1184)
\raisebox:                                     See 20.6.     (line 4135)
\rangle:                                       See 16.2.     (line 3282)
\rbrace:                                       See 16.2.     (line 3285)
\rbrack:                                       See 16.2.     (line 3288)
\rceil:                                        See 16.2.     (line 3291)
\Re:                                           See 16.2.     (line 3294)
\ref:                                          See 7.3.      (line  859)
\refstepcounter:                               See 11.6.     (line 2494)
\renewenvironment:                             See 10.5.     (line 2304)
\restorecr:                                    See 13.2.     (line 2600)
\reversemarginpar:                             See 15.4.     (line 2788)
\rfloor:                                       See 16.2.     (line 3297)
\rhd:                                          See 16.2.     (line 3300)
\rho:                                          See 16.2.     (line 3303)
\right:                                        See 16.6.     (line 3694)
\rightarrow:                                   See 16.2.     (line 3309)
\Rightarrow:                                   See 16.2.     (line 3306)
\rightharpoondown:                             See 16.2.     (line 3312)
\rightharpoonup:                               See 16.2.     (line 3315)
\rightleftharpoons:                            See 16.2.     (line 3318)
\rightmargin:                                  See 8.13.     (line 1282)
\rm:                                           See 4.1.      (line  513)
\rmfamily:                                     See 4.1.      (line  438)
\roman:                                        See 11.1.     (line 2433)
\rq:                                           See 21.2.     (line 4250)
\rule:                                         See 21.5.     (line 4358)
\S:                                            See 21.2.     (line 4253)
\savebox:                                      See 20.7.     (line 4151)
\sbox:                                         See 20.8.     (line 4163)
\sc:                                           See 4.1.      (line  516)
\scriptsize:                                   See 4.2.      (line  537)
\scshape:                                      See 4.1.      (line  462)
\searrow:                                      See 16.2.     (line 3321)
\sec:                                          See 16.3.     (line 3589)
\section:                                      See 6.        (line  763)
\selectfont:                                   See 4.3.      (line  623)
\setcounter:                                   See 11.4.     (line 2478)
\setlength:                                    See 12.1.     (line 2524)
\setminus:                                     See 16.2.     (line 3324)
\settodepth:                                   See 12.3.     (line 2537)
\settoheight:                                  See 12.4.     (line 2545)
\settowidth:                                   See 12.5.     (line 2553)
\sf:                                           See 4.1.      (line  519)
\sffamily:                                     See 4.1.      (line  459)
\sharp:                                        See 16.2.     (line 3327)
\shortstack:                                   See 8.18.13.  (line 1626)
\sigma:                                        See 16.2.     (line 3333)
\Sigma:                                        See 16.2.     (line 3330)
\signature:                                    See 24.10.    (line 4668)
\sim:                                          See 16.2.     (line 3336)
\simeq:                                        See 16.2.     (line 3339)
\sin:                                          See 16.3.     (line 3592)
\sinh:                                         See 16.3.     (line 3595)
\sl:                                           See 4.1.      (line  522)
\slshape:                                      See 4.1.      (line  456)
\small:                                        See 4.2.      (line  537)
\smallint:                                     See 16.2.     (line 3342)
\smallskip:                                    See 19.10.    (line 3989)
\smallskipamount:                              See 19.10.    (line 3989)
\smile:                                        See 16.2.     (line 3345)
\SPACE:                                        See 19.3.     (line 3904)
\spadesuit:                                    See 16.2.     (line 3348)
\sqcap:                                        See 16.2.     (line 3351)
\sqcup:                                        See 16.2.     (line 3354)
\sqrt[ROOT]{arg}:                              See 16.6.     (line 3705)
\sqsubset:                                     See 16.2.     (line 3357)
\sqsubseteq:                                   See 16.2.     (line 3360)
\sqsupset:                                     See 16.2.     (line 3363)
\sqsupseteq:                                   See 16.2.     (line 3366)
\ss (ss):                                      See 21.4.     (line 4352)
\stackrel{TEXT}{RELATION}:                     See 16.6.     (line 3711)
\star:                                         See 16.2.     (line 3369)
\startbreaks:                                  See 24.11.    (line 4674)
\stepcounter:                                  See 11.7.     (line 2501)
\stop:                                         See 26.       (line 4738)
\stopbreaks:                                   See 24.12.    (line 4681)
\subparagraph:                                 See 6.        (line  771)
\subsection:                                   See 6.        (line  765)
\subset:                                       See 16.2.     (line 3372)
\subseteq:                                     See 16.2.     (line 3375)
\subsubsection:                                See 6.        (line  767)
\succ:                                         See 16.2.     (line 3378)
\succeq:                                       See 16.2.     (line 3381)
\sum:                                          See 16.2.     (line 3384)
\sup:                                          See 16.3.     (line 3598)
\supset:                                       See 16.2.     (line 3387)
\supseteq:                                     See 16.2.     (line 3390)
\surd:                                         See 16.2.     (line 3393)
\swarrow:                                      See 16.2.     (line 3396)
\symbol:                                       See 21.1.     (line 4210)
\t (tie-after accent):                         See 21.3.     (line 4316)
\TAB:                                          See 19.3.     (line 3904)
\tabbingsep:                                   See 8.21.     (line 1761)
\tabcolsep:                                    See 8.23.     (line 1912)
\tableofcontents:                              See 23.1.     (line 4447)
\tan:                                          See 16.3.     (line 3601)
\tanh:                                         See 16.3.     (line 3604)
\tau:                                          See 16.2.     (line 3399)
\telephone:                                    See 24.13.    (line 4688)
\TeX:                                          See 21.2.     (line 4256)
\textbf:                                       See 4.1.      (line  450)
\textfloatsep:                                 See 8.10.     (line 1154)
\textfraction:                                 See 8.10.     (line 1158)
\textheight:                                   See 5.5.      (line  727)
\textit:                                       See 4.1.      (line  441)
\textmd:                                       See 4.1.      (line  447)
\textnormal:                                   See 4.1.      (line  468)
\textrm:                                       See 4.1.      (line  438)
\textsc:                                       See 4.1.      (line  462)
\textsf:                                       See 4.1.      (line  459)
\textsl:                                       See 4.1.      (line  456)
\texttt:                                       See 4.1.      (line  465)
\textup:                                       See 4.1.      (line  453)
\textwidth:                                    See 5.5.      (line  734)
\thanks{TEXT}:                                 See 18.1.     (line 3788)
\theta:                                        See 16.2.     (line 3402)
\thicklines:                                   See 8.18.8.   (line 1567)
\thinlines:                                    See 8.18.9.   (line 1574)
\thinspace:                                    See 19.5.     (line 3929)
\thispagestyle:                                See 18.4.     (line 3862)
\tilde:                                        See 16.4.     (line 3642)
\times:                                        See 16.2.     (line 3405)
\tiny:                                         See 4.2.      (line  537)
\title{TEXT}:                                  See 18.1.     (line 3792)
\to:                                           See 16.2.     (line 3408)
\today:                                        See 21.6.     (line 4377)
\top:                                          See 16.2.     (line 3411)
\topfraction:                                  See 8.10.     (line 1163)
\topmargin:                                    See 5.5.      (line  740)
\topsep:                                       See 8.13.     (line 1301)
\topskip:                                      See 5.5.      (line  747)
\totalheight:                                  See 12.6.     (line 2565)
\triangle:                                     See 16.2.     (line 3414)
\triangleleft:                                 See 16.2.     (line 3417)
\triangleright:                                See 16.2.     (line 3420)
\tt:                                           See 4.1.      (line  525)
\ttfamily:                                     See 4.1.      (line  465)
\twocolumn:                                    See 5.2.      (line  645)
\typein:                                       See 25.1.     (line 4699)
\typeout:                                      See 25.2.     (line 4713)
\u (breve accent):                             See 21.3.     (line 4319)
\unboldmath:                                   See 16.       (line 2843)
\underbrace{math}:                             See 16.6.     (line 3715)
\underline{text}:                              See 16.6.     (line 3718)
\unitlength:                                   See 8.18.     (line 1408)
\unlhd:                                        See 16.2.     (line 3423)
\unrhd:                                        See 16.2.     (line 3426)
\uparrow:                                      See 16.2.     (line 3432)
\Uparrow:                                      See 16.2.     (line 3429)
\updownarrow:                                  See 16.2.     (line 3438)
\Updownarrow:                                  See 16.2.     (line 3435)
\uplus:                                        See 16.2.     (line 3441)
\upshape:                                      See 4.1.      (line  453)
\upsilon:                                      See 16.2.     (line 3447)
\Upsilon:                                      See 16.2.     (line 3444)
\usebox:                                       See 20.9.     (line 4175)
\usecounter:                                   See 11.2.     (line 2453)
\usefont:                                      See 4.3.      (line  627)
\usepackage:                                   See 3.1.      (line  404)
\v (breve accent):                             See 21.3.     (line 4322)
\value:                                        See 11.3.     (line 2464)
\varepsilon:                                   See 16.2.     (line 3450)
\varphi:                                       See 16.2.     (line 3453)
\varpi:                                        See 16.2.     (line 3456)
\varrho:                                       See 16.2.     (line 3459)
\varsigma:                                     See 16.2.     (line 3462)
\vartheta:                                     See 16.2.     (line 3465)
\vdash:                                        See 16.2.     (line 3468)
\vdots:                                        See 16.6.     (line 3722)
\vec:                                          See 16.4.     (line 3645)
\vector:                                       See 8.18.14.  (line 1647)
\vee:                                          See 16.2.     (line 3471)
\verb:                                         See 8.27.1.   (line 2122)
\vert:                                         See 16.2.     (line 3477)
\Vert:                                         See 16.2.     (line 3474)
\vfill:                                        See 19.11.    (line 3998)
\vline:                                        See 8.23.4.   (line 1962)
\vspace:                                       See 19.12.    (line 4005)
\wedge:                                        See 16.2.     (line 3480)
\widehat:                                      See 16.4.     (line 3648)
\width:                                        See 12.6.     (line 2559)
\wp:                                           See 16.2.     (line 3483)
\wr:                                           See 16.2.     (line 3486)
\xi:                                           See 16.2.     (line 3492)
\Xi:                                           See 16.2.     (line 3489)
\year:                                         See 11.8.     (line 2507)
\zeta:                                         See 16.2.     (line 3495)
\{:                                            See 21.1.     (line 4196)
\|:                                            See 16.2.     (line 2870)
\}:                                            See 21.1.     (line 4196)
\~:                                            See 21.1.     (line 4206)
\~ (tilde accent):                             See 21.3.     (line 4291)
^:                                             See 16.1.     (line 2856)
_:                                             See 16.1.     (line 2856)
a4paper option:                                See 3.1.      (line  349)
a5paper option:                                See 3.1.      (line  349)
abstract environment:                          See 8.1.      (line  881)
array environment:                             See 8.2.      (line  892)
article class:                                 See 3.        (line  326)
b5paper option:                                See 3.1.      (line  349)
book class:                                    See 3.        (line  326)
center environment:                            See 8.3.      (line  939)
description environment:                       See 8.4.      (line  976)
displaymath environment <1>:                   See 16.       (line 2818)
displaymath environment:                       See 8.5.      (line  999)
document environment:                          See 8.6.      (line 1018)
draft option:                                  See 3.1.      (line  354)
enumerate environment:                         See 8.7.      (line 1024)
eqnarray environment:                          See 8.8.      (line 1065)
equation environment <1>:                      See 16.       (line 2818)
equation environment:                          See 8.9.      (line 1091)
executivepaper option:                         See 3.1.      (line  349)
figure:                                        See 8.10.     (line 1104)
final option:                                  See 3.1.      (line  354)
fleqn option:                                  See 3.1.      (line  354)
flushleft environment:                         See 8.11.     (line 1171)
flushright environment:                        See 8.12.     (line 1197)
itemize environment:                           See 8.13.     (line 1223)
landscape option:                              See 3.1.      (line  354)
legalpaper option:                             See 3.1.      (line  349)
leqno option:                                  See 3.1.      (line  354)
letter:                                        See 8.14.     (line 1336)
letter class:                                  See 3.        (line  326)
letterpaper option:                            See 3.1.      (line  349)
list:                                          See 8.15.     (line 1341)
lR box:                                        See 8.18.     (line 1460)
lrbox:                                         See 20.3.     (line 4053)
math environment <1>:                          See 16.       (line 2818)
math environment:                              See 8.16.     (line 1363)
minipage environment:                          See 8.17.     (line 1375)
notitlepage option:                            See 3.1.      (line  354)
onecolumn option:                              See 3.1.      (line  379)
oneside option:                                See 3.1.      (line  379)
openany option:                                See 3.1.      (line  379)
openbib option:                                See 3.1.      (line  354)
openright option:                              See 3.1.      (line  379)
picture:                                       See 8.18.     (line 1404)
quotation:                                     See 8.19.     (line 1658)
quote:                                         See 8.20.     (line 1673)
report class:                                  See 3.        (line  326)
slides class:                                  See 3.        (line  326)
tabbing environment:                           See 8.21.     (line 1688)
table:                                         See 8.22.     (line 1780)
tabular environment:                           See 8.23.     (line 1816)
thebibliography:                               See 8.24.     (line 1970)
theorem environment:                           See 8.25.     (line 2075)
titlepage environment:                         See 8.26.     (line 2088)
titlepage option:                              See 3.1.      (line  354)
twocolumn option:                              See 3.1.      (line  379)
twoside option:                                See 3.1.      (line  379)
verbatim environment:                          See 8.27.     (line 2105)
verse environment:                             See 8.28.     (line 2139)
